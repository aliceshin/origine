<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BISTel.PeakPerformance.Statistics.Algorithm</name>
    </assembly>
    <members>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.App.DataProcessing.IDataProcessing">
            Summary description for IDataProcessing.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.App.DataProcessing.IrregularLengthData.IIrregularLengthData">
            Summary description for IIrregularLengthData.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.DataProcessing.IrregularLengthData.AbstractIrregularLengthData.getValues">
            get Values
            
            
            
            @return double[]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.DataProcessing.IrregularLengthData.AbstractIrregularLengthData.setValues(System.Double[])">
            set Values
            
            
            
            @param values (double[])
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.App.FFT.FastFourierTransform">
            <summary>
            Constructs an FFT object
            </summary>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.FFT.FastFourierTransform.#ctor(System.Int32)">
            <summary>
            Constructs an FFT object
            </summary>
            <param name="n">A int which specifies the array size that this object can handle</param>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.FFT.FastFourierTransform.Backward(System.Double[])">
            <summary>
            Compute the real periodic sequence from its fourier coeffcients
            </summary>
            <param name="coef">A double array containing the fourier coefficients</param>
            <returns>a double array containing the periodic sequence</returns>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.FFT.FastFourierTransform.Forward(System.Double[])">
            <summary>
            Compute the fourier coefficients of a real periodic sequence
            </summary>
            <param name="seq">A double array containing the sequence to be transformed</param>
            <returns>A double array containing the periodic sequence</returns>
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.AbstractDataSet">
            DataSet의 요약 설명입니다.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.DecisionTree">
            	Decision Tree_ID3_numerical_version : 
            				: this version supports numerical data.
             			: branching 2 children only
            				: be branched by Calculating Information Gain  (for attribute / value)
             
            				 Han A Hyang 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.DecisionTree.getSubset(System.Collections.ArrayList,System.Int32,System.Double)">
             Divide the attribute to two sub set by the value
             
             @param data
             @param attribute
             @param value
            	 
             @return two subset
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._hds">
            historical data
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._classes">
            classes for hds
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._k">
            k for k-NN
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._distanceChoice">
            distance choice - Euclidean or Mahalanobis
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._classCount">
            classcount for hds
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._classKind">
            classkind for hds
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._dimension">
            dimension
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._dist">
            temporary varialbe for distance.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._distance">
            Variable including the information of distance and class kind
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._mahalaMatrix">
            mahalanobis matrix
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._mahalaMatrixTranspose">
            mahalanobis MatrixTranspose
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._mahalaCovarianceInverse">
            mahalanobis covariance
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._modifiedMatrix">
            modifiedMatrix
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN.EUCLIDEANDISTANCE">
            Configs for distanceChoice
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN._comparisons">
            variables for quick sort(internal use)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN.getHds">
            get/set method
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN.#ctor(System.Double[][],System.Int32[],System.Int32,System.String)">
             Constructor
             
             @param hds
            	historical data set
             @param classes
            	classes for hds
             @param k
            	k for k-nn
             @param distanceChoice
            	distance choice(EUCLIDEANDISTANCE / MAHALANOBISDISTANCE)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN.query(System.Double[])">
            when only the query data was entered 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN.query(System.Double[],System.Int32)">
            when query data and k were entered 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.App.MachineLearning.KNN.query(System.Double[],System.String)">
            when query data and kind of distance were entered
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc">
            <summary>
            Arc Class
            Arc의 Weight를 저장
            이전노드의 Activation값과 weight값을 곱하여 반환
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc.dBeforeG">
            <summary>
            G(j)값
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc.dAfterG">
            <summary>
            G(j+1)값
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc.dWeight">
            <summary>
            Arc의 Weight값 
            </summary>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc.#ctor(BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node,BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node,System.Double)">
            <summary>
            생성자
            </summary>
            <param name="InputNode">현재 Arc의 Input Node</param>
            <param name="OutputNode">현재 Arc의 Output Node</param>
            <param name="dWeight">Arc의 Weight값 설정</param>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc.GetActivation">
            <summary>
            이전 노드의 Activation값을 현재 Arc의 Weight와 곱하여 반환하는 함수
            </summary>
            <param name="bIsForward">true:전방향, false:후방향</param>
            <returns>Activatoin값 * Weight값 을 double형으로 반환</returns>
        </member>
        <member name="P:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc.Weight">
            <summary>
            Weight의 Indexer (double형)
            </summary>		
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.ConjugateGradient">
            <summary>
            
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.ConjugateGradient.scale_tol">
            기본 Parameter설정구간 ///
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.ConjugateGradient.dInputData">
            Trainig 관련Data  셋팅부분 ///
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.ConjugateGradient.Training(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Int32,System.Boolean,System.Double[])">
            <summary>
            Validation Data 가 있는경우 Training (Iteration Stop)
            </summary>
            <param name="alInputDataList">Input Data</param>
            <param name="alTargetDataList">Target Data</param>
            <param name="alValidationInputData">Validation Input Data</param>
            <param name="alValidationTargetData">Validation Target Data</param>
            <param name="nIteration">Training 횟수</param>
            <param name="bIsErrorEvent">Error Event 발생 : true</param>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.ConjugateGradient.Training(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Boolean,System.Double[],System.Int32,System.Int32)">
            <summary>
            Validation Data 가 있는경우 Training (Validation Stop)
            </summary>
            <param name="alInputDataList">Input Data</param>
            <param name="alTargetDataList">Target Data</param>
            <param name="alValidationInputData">Validation Input Data</param>
            <param name="alValidationTargetData">Validation Target Data</param>
            <param name="bIsErrorEvent">Error Event 발생 : true</param>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.ConjugateGradient.RunValidationStopThread">
            <summary>
            Training Thread 시작 ( Validation Stop )
            </summary>		
            <param name="bIsErrorEvent">Error Event발생 : true, 미발생 : false</param>
            <param name="bIsValidationData">Validation Data 있음 : true, 없음 false</param>
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Layer">
            <summary>
            
            </summary>
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.LayerData">
            <summary>
            
            </summary>
            <summary>
            Layer 구조체
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.LayerData.nNodeNum">
            <summary>
            현재 Layer의 Node수
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.LayerData.bBias">
            <summary>
            Bias Node의 유무  true:유, false:무
            </summary>
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Network">
            <summary>
            
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Network.dWeight">
            <summary>
             ARC 저장 변수
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Network.dActivation">
            <summary>
            Node 저장변수
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Network.alNetworkInfo">
            <summary>
            Network 저장 변수
            </summary>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Network.CopyNetwork">
            <summary>
            network 전체정보 복사
            </summary>
            <returns></returns>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Network.CopyNetworkWeight">
            <summary>
            network 정보만 복사 (기본정보 + weight정보)
            </summary>
            <returns></returns>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Network.CreateNetwork">
            <summary>
            Network 구조에 맞게 배열 선언
            </summary>
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node">
            <summary>
            
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.alInputArcList">
            <summary>
            Input Arc List
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.alOutputArcList">
            <summary>
            Output Arc List
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.dActivation">
            <summary>
            Node 에서의 Activation 값
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.bIsActivated">
            <summary>
            현재 Node가 Activate 되었는지 여부확인 
            true : Activate됨 false : Activate되지 않음
            </summary>
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.dDelta">
            <summary>
            Delta 값 저장
            </summary>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.InitializeComponent">
            <summary>
            각 멤버 변수 초기화
            </summary>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.GetActivation">
            <summary>
            Node의 Activation값 구하는 함수
            </summary>
            <param name="bIsForward">true:전방향, false:후방향</param>
            <returns>double 형으로 Activation 값 반환</returns>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.UpdateActivation(System.Collections.IEnumerator)">
            <summary>
            Node의 Activation값 Update 함수
            </summary>
            <param name="enArcList">Update방향의 ArcList</param>
            <returns>Update된 Activation값을double형으로 반환</returns>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.AddInputArc(BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc)">
            <summary>
            Input Arc 추가
            </summary>
            <param name="arc">추가될 Input Arc</param>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.AddOutputArc(BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Arc)">
            <summary>
            Output Arc 추가
            </summary>
            <param name="arc">추가될 Output Arc</param>
        </member>
        <member name="P:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.InputArcList">
            <summary>
            Input Arc List Indexer 로 alInputArcList를 IEnumerator형으로 반환
            </summary>
        </member>
        <member name="P:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.OutputArcList">
            <summary>
            Output Arc List Indexer 로 alOutputArcList를 IEnumerator형으로 반환
            </summary>
        </member>
        <member name="P:BISTel.PeakPerformance.Statistics.Algorithm_CSharp.App.NeuralNetwork.Node.Activation">
            <summary>
            Activation Indexer
            </summary>
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.App.Optimizer.LinearOptimizer">
            LinearOptimizer의 요약 설명입니다.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Common.Comparators">
            Comparators class
            
            
            
            modified at 2006. 11. 27
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky">
            Cholesky Decomposition. For a symmetric, positive definite matrix A, the
            Cholesky decomposition is an lower triangular matrix L so that A = L*L'.
            
            If the matrix is not symmetric or positive definite, the constructor returns
            a partial decomposition and sets an internal flag that may be queried by the
            isSPD() method.
            
            modified at 2006. 6. 5 오후 6:53:45
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky._dim">
            Row and column dimension (square matrix).
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky._isspd">
            Symmetric and positive definite flag.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky._L">
            Array for internal storage of decomposition.
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky.#ctor(System.Double[][])" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky.getL">
             Return triangular factor.
             
             @return triangular factor.
            		
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky.getLMatrix">
            Return triangular factor.
            
            @return triangular factor.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky.isSPD">
            Is the matrix symmetric and positive definite?
            
            @return true if A is symmetric and positive definite.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky.solve(System.Double[][])">
            Solve A*X = B
            
            @param B
            				A Matrix with as many rows as A and any number of columns.
            @return X so that L*L'*X = B
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Cholesky.solve(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Solve A*X = B
            
            @param B
            				A Matrix with as many rows as A and any number of columns.
            @return X so that L*L'*X = B
        </member>
        <!-- Badly formed XML comment ignored for member "T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen" -->
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.n">
            Row and column dimension (square matrix).
            		@serial matrix dimension.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.issymmetric">
            Symmetry flag.
            		@serial internal symmetry flag.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.d">
            Arrays for internal storage of eigenvalues.
            		@serial internal storage of eigenvalues.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.e">
            Arrays for internal storage of eigenvalues.
            		@serial internal storage of eigenvalues.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.V">
            Array for internal storage of eigenvectors.
            		@serial internal storage of eigenvectors.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.H">
            Array for internal storage of nonsymmetric Hessenberg form.
            		@serial internal storage of nonsymmetric Hessenberg form.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.ort">
            Working storage for nonsymmetric algorithm.
            		@serial working storage for nonsymmetric algorithm.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Check for symmetry, then construct the eigenvalue decomposition
            		@param A    Square matrix
            		@return     Structure to access D and V.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.getV">
            Return the eigenvector matrix
            		@return     V
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.getRealEigenvalues">
            Return the real parts of the eigenvalues
            		@return     real(diag(D))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.getImagEigenvalues">
            Return the imaginary parts of the eigenvalues
            		@return     imag(diag(D))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Eigen.getD">
            Return the block diagonal eigenvalue matrix
            		@return     D
        </member>
        <!-- Badly formed XML comment ignored for member "T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU" -->
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU._LU">
            Array for internal storage of decomposition.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU._pivot">
            Internal storage of pivot vector.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU._rows">
            Row and column dimensions, and pivot sign.
            
            @serial row dimension.
            @serial column dimension.
            @serial pivot sign.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU._cols">
            Row and column dimensions, and pivot sign.
            
            @serial row dimension.
            @serial column dimension.
            @serial pivot sign.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU._pivSign">
            Row and column dimensions, and pivot sign.
            
            @serial row dimension.
            @serial column dimension.
            @serial pivot sign.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.#ctor(System.Double[][])">
            LU Decomposition
            
            @param A
            				Rectangular matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            LU Decomposition
            
            @param A
            				Matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.determinant">
            Determinant
            
            @return determinant value
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.getDoublePivot">
            Return pivot permutation vector as a one-dimensional double array
            
            @return pivot array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.getL">
            Return lower triangular factor
            
            @return lower trangular factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.getLMatrix">
            Return lower triangular factor
            
            @return lower trangular factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.getPivot">
            Return pivot permutation vector
            
            @return pivot permutation vector
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.getPivotVector">
             Return pivot permutation vector
             
             @return pivot permutation vector
            		
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.getU">
            Return upper triangular factor
            
            @return upper triangular factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.getUMatrix">
            Return upper triangular factor
            
            @return upper triangular factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.isNonsingular">
            Is the matrix nonsingular?
            
            @return true if U, and hence A, is nonsingular.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.solve(System.Double[][])">
            Solve A*X = B
            
            @param B
            				A Matrix with as many rows as A and any number of columns.
            @return X so that L*U*X = B(piv,:)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.LU.solve(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Solve A*X = B
            
            @param B
            				A Matrix with as many rows as A and any number of columns.
            @return X so that L*U*X = B(piv,:)
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix">
            Matrix class
            
            modified at 2006. 5. 18 오전 11:35:47
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix._data">
            Array for internal storage of elements.
            
            @serial internal array storage.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix._rows">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix._cols">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.constructWithCopy(System.Double[][])">
            Construct a matrix from a deep copy of a 2-D array.
            
            @param a
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.identityMatrix(System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.identityMatrix(System.Int32,System.Int32)">
            Generate identity matrix
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @return An m-by-n matrix with ones on the diagonal and zeros elsewhere.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.normalize(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Normalize elements ( x' = ( x - e(x) ) / std(x) )
            
            @param a
            @return
            @see StStat#normalize()
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.normalize(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Normalize elements ( x' = ( x - e(x) ) / std(x) )
            
            @param a
            @param mean
            @param std
            @return
            @see StStat#normalize()
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.print(System.String,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Print Matrix to colsole
            
            @param title
            @param A
            @param w
                       Column width
            @param d
                       Number of digits after the decimal
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.print(System.String,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.Int32,System.Int32)">
            Print Matrix to colsole
            
            @param title
            @param A
            @param w
                       Column width
            @param d
                       Number of digits after the decimal
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.randomMatrix(System.Int32,System.Int32)">
            Generate matrix with random elements
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @return An m-by-n matrix with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.replaceEPS(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            replace EPS to 0
            
            @param x
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.stringToMatrix(System.String,System.Int32,System.String)">
            string to Matrix function( 1 dim to 2 dim )
            
            @param stringData
            @param cols
            @param fillingDirection
            				"ROW" or "COL" direction
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.ToString(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Print matrix to output stream
            
            @param A
            @return string
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.ToString(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.Int32,System.Int32)">
            Print the matrix to the output stream. Line the elements up in columns
            with a Fortran-like 'Fw.d' style format.
            
            @param A
            @param w
                       Column width.
            @param d
                       Number of digits after the decimal
            @return string
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.ToString(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.Globalization.NumberFormatInfo,System.Int32)">
            Print the matrix to the output stream. Line the elements up in columns.
            Use the format object, and right justify within columns of width
            characters. Note that is the matrix is to be read back in, you probably
            will want to use a NumberFormat that is set to US Locale.
            
            @param format
                       A formatting object to format the matrix elements
            @param width
                       Column width.
            @return string
            @see java.text.DecimalFormat#setDecimalFormatSymbols
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Double[])">
            Construct a [ values.Length x 1 ] matrix from the given array
            
            The demension is the same as that of the array
            
            @param values
                       One-dimensional array of doubles.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Double[],System.Int32)">
            Construct a matrix[ rows x values.Length/rows ] from a one-dimensional packed array
            
            @param values
                       One-dimensional array of doubles, packed by columns(ala
                       Fortran).
            @param rows
                       Number of rows.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Double[],System.Int32,System.String)">
            Construct a matrix[ rows x values.Length/rows ] from a one-dimensional packed array
            
            @param values
                       One-dimensional array of doubles, packed by columns(ala
                       Fortran).
            @param rows
                       Number of rows.
            @param fillingDirection
            				"ROW" or "COL" direction
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Double[][])">
            Construct a matrix from a 2-D array.
            
            @param values
                       Two-dimensional array of doubles.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Double[][],System.Int32,System.Int32)">
            Construct a matrix quickly without checking arguments.
            
            @param array
                       Two-dimensional array of doubles.
            @param m
                       Number of rows.
            @param n
                       Number of colums.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Int32)">
            Construct a identity matrix with the given dimension
            
            @param dim
                       The demension of a matrix to create
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Int32,System.Double)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Int32,System.Int32)">
             Construct an m-by-n matrix of zeros.
             
             @param rows
            			Number of rows.
             @param cols
             			Number of colums.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.Int32,System.Int32,System.Double)">
            Construct an m-by-n constant matrix.
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @param value
                       Fill the matrix with this scalar value.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Construct a matrix from other matrix
            
            @param other
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.String)">
            Construct a matrix[ tokens x 1 ] from a string stream
            
            @param stringData
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.#ctor(System.String,System.Int32)">
            Construct a matrix[ tokens x cols ] from a string stream
            
            @param stringData
            @param rows
                       The number of rows
            @exception ArgumentException
                           The number of elements in the string must be a multiple of m.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.add(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            x = this + B
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.addEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            this += B
            
            @param B
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.checkMatrixDimensions(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Check matrix demensions with other matrix
            
            @param other
            @exception ArgumentException
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.cholD">
            Cholesky Decomposition
            
            @return CholeskyDecomposition
            @see Cholesky
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.Clone">
            Clone the Matrix(deepcopy).
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.cond">
            Matrix condition number(2-norm)
            
            @return condition number
            @see SVD#condition()
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.copy">
            Make a deep copy of a matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.copyColData(System.Int32)">
            Make a new array of a column of matrix 
            
            @param col
            @return a new array of a column of matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.copyColumnPackedData">
            Make a one-dimensional column packed copy of the internal array.
            
            @return Matrix elements packed in a one-dimensional array by columns.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.copyData">
            Copy the internal two-dimensional array.
            
            @return Two-dimensional array copy of matrix elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.copyRowData(System.Int32)">
            Make a new array of a row of matrix
            
            @param row
            @return a new array of a row of matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.copyRowPackedData">
            Make a one-dimensional row packed copy of the internal array.
            
            @return Matrix elements packed in a one-dimensional array by rows.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.correlation">
            Make a correlation matrix
            
            @return correlation matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.covariance">
            Make a covariance matrix
            
            @return covariance matrix
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.covariance(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.covariance(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            cov(Xi, Yj) = std(i) * std(j) * cor(Xi, Yi)
            
            @return
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.determinant">
            Matrix determinant
            
            Matrix must be square
            
            @return determinant
            @see LU#determinant()
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.deviationMatrix">
            Make deviation matrix
            
            @return deviation matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.divide(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Matrix divide operation, x = a / b
            
            if b is [ 1, 1 ] matrix then perform elementRightDivide.
            else perform multiply( inverse(b) )
            
            @param a
            @param b
            @return Matrix
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.symEigenD" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementLeftDivide(System.Double)">
            Element divide operation. x = this. \ value
            
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementLeftDivide(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Element-by-element left division, x = A. \ B
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementLeftDivideEquals(System.Double)">
            Element divide operation. this = this. \ value
            
            @param value
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementLeftDivideEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Element-by-element left division in place, this = this. \ B
            
            @param B
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementMinus(System.Double)">
            Element minus operation. x = this. - value
            
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementMinusEquals(System.Double)">
            Element minus operation. this = this. - value
            
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementPlus(System.Double)">
            Element plus operation. x = this. + value
            
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementPlusEquals(System.Double)">
            Element plus operation. this = this. + value
            
            @param value
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementPow(System.Double)">
            Element power operation. x = this. ^ pow
            
            @param pow
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementPowEquals(System.Double)">
            Element power operation. this = this. ^ pow
            
            @param pow
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementRightDivide(System.Double)">
            Element divide operation. x = this. / value
            
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementRightDivide(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Element-by-element right division, x = this. / B.
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementRightDivideEquals(System.Double)">
            Element divide operation. this = this. / value
            
            @param value
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementRightDivideEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Element-by-element right division in place, this = this. / B.
            
            @param B
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementSqrt">
            Element sqrt operation. x = sqrt( this. )
            
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementSqrtEquals">
            Element sqrt operation. this = sqrt( this. )
            
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementSquare">
            Element sqrt operation. x = this. ^ 2;
            
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementSquareEquals">
            Element sqrt operation. this = this. ^ 2;
            
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementTimes(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Element-by-element multiplication, x = this. * B.
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.elementTimesEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Element-by-element multiplication in place, this = this. * B.
            
            @param B
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.Equals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Compare with other matrix.
            
            @param other
            @return true if this == other, false otherwise
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.get(System.Int32,System.Int32)">
            Get a single element.
            
            @param row
                       Row index.
            @param col
                       Column index.
            @return this(i,j)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getColMatrix(System.Int32)">
            Get a submatrix.(Column vector)
            
            @param col
            @return Matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getCols">
            Get column dimension.
            
            @return cols, the number of columns.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getColVector(System.Int32)">
            Get a submatrix.(Column vector)
            
            @param col
            @return Vector
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getData">
            Access the internal two-dimensional array.
            
            @return Pointer to the two-dimensional array of matrix elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getDiagonalMatrix">
            Return the diagonal matrix of singular values
            
            @return diagonal matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getRowMatrix(System.Int32)">
            Get a submatrix(row vector)
            
            @param row
            @return Matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getRows">
            Get row dimension.
            
            @return rows, the number of rows.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getRowVector(System.Int32)">
            Get a submatrix(Row vector)
            
            @param row
            @return Vector
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getSize">
            Get Matrix Size
            
            @return int[]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getSubMatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
            Get a submatrx.
            
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param col1
                       Initial column index
            @param col2
                       Final column index
            @return this(row1:row2,col1:col2)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getSubMatrix(System.Int32,System.Int32,System.Int32[])">
            Get a submatrix.
            
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param cols
                       Array of column indices.
            @return this(row1:row2,cols(:))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getSubMatrix(System.Int32[],System.Int32,System.Int32)">
            Get a submatrix.
            
            @param _residuals
                       Array of row indices.
            @param i0
                       Initial column index
            @param i1
                       Final column index
            @return this(rows(:),col1:col2)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getSubMatrix(System.Int32[],System.Int32[])">
            Get a submatrix.
            
            @param r
                       Array of row indices.
            @param c
                       Array of column indices.
            @return this(r(:),c(:))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.inverse">
            Matrix inverse or pseudoinverse
            
            @return inverse(A) if A is square, pseudoinverse otherwise.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.isSymmetric">
            Returns true if this is Symmetric matrix, false otherwise
            
            @return true if this is Symmetric matrix, false otherwise
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.luD">
            LU Decomposition
            
            @return LU
            @see LU
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.max(System.String)">
            Find max element value from each col or row.
            
            @param roc
            @return max array
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.max(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.mean(System.String)">
            Calculate mean value from each col or row
            
            @return mean array
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.mean(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.min(System.String)">
            Find min element value from each col or row
            
            @return min array
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.min(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.mse(System.String)">
            Calculate mse value from each col or row
            
            @return mse array
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.mse(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.multiply(System.Double)">
            Multiply a matrix by a scalar, x = value * this
            
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.multiply(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Linear algebraic multiplication, x = this * B
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.multiply(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Linear algebraic multiplication, x = this * b
            
            @param b
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.multiplyEquals(System.Double)">
            Multiply a matrix by a scalar in place, this *= value
            
            @param value
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.multiplyTranspose">
            x = this * this'
            
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.multiplyTranspose(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            x = this * B'
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.norm">
            Returns 2-norm
            
            @return 2-norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.norm1">
            1-norm
            
            @return 1-norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.norm2">
            2-norm
            
            @return 2-norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.normalize">
            x = ( this. - this.mean( COL ) ) / this.std( COL )
            
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.normalizeEquals">
            this = ( this. - this.mean( COL ) ) / this.std( COL )
            
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.normFrobenius">
            Frobenius norm
            
            @return Frobenius norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.normInf">
            Infinity norm
            
            @return infinity norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.poweredSum(System.Double)">
            Calculate powered summation. x = sum( this. ^ power )
            
            @param power
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.print(System.String)">
            Print Matrix to colsole
            
            @param title
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.print(System.String,System.Int32,System.Int32)">
            Print Matrix to colsole
            
            @param title
            @param w
                       Column width
            @param d
                       Number of digits after the decimal
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.productSum(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Calculate product summation. s = sum( this. * X. )
            
            @param X
            @return s
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.qrD">
            QR Decomposition
            
            @return QR
            @see QR
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.range(System.String)">
            Matrix range
            
            @param roc
            				ROW or COL direction
            @return a vector of highest and lowest values in the matrix
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.range(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.rangeMinMax(System.String)">
            Matrix range
            
            @param roc
            				ROW or COL direction
            @return a vector of highest and lowest values in the matrix
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.rangeMinMax(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.rangeScale">
            rangeScale by maxs, mins
            
            @return scaled matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.rangeScale(System.Double[],System.Double[])">
            rangeScale
            
            @param dataUpper
            @param dataLower
            
            @return scaled matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.rangeScaleInverse(System.Double[],System.Double[])">
            rangeScaleInverse
            
            @param dataUpper
            @param dataLower
            @return inverse scaled matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.rank">
            Matrix rank
            
            @return effective numerical rank, obtained from SVD.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.removeCol(System.Int32)">
            Remove Column
            It's too slow operation.
            If you want remove two or more columns then use getSubMatrix method.
            
            @param col
            @return double[][]
            @see getSubMatrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.removeRow(System.Int32)">
            Remove Row
            It's too slow operation.
            If you want remove two or more rows then use GetSubMatrix method.
            
            @param row
            @return double[][]
            @see getSubMatrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.set(System.Int32,System.Int32,System.Double)">
            Set a single element.
            
            @param row
                       Row index.
            @param col
                       Column index.
            @param value
                       data(i,j).
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setAllValue(System.Double)">
            Set all element to value
            
            @param value
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setColValue(System.Int32,System.Double[])">
            Set elements of a column to rowVector.
            
            @param rowVector
            @param col
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setColValue(System.Int32,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Set elements of a column to rowVector.
            
            @param rowVector
            @param col
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setColValue(System.Int32,System.String)">
            Set elements of a column to rowVector.
            
            @param rowvector
            @param col
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setDiagonal(System.Int32,System.Double)">
            Set the element in dialogal index n.
            
            @param rowCol
            @param value
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setRowValue(System.Int32,System.Double[])">
            Set elements of a row to colVector
            
            @param row
            @param colVector
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setRowValue(System.Int32,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Set elements of a row to colVector.
            
            @param row
            @param colVector
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setRowValue(System.Int32,System.String)">
            Set elements of a row to colVector
            
            @param row
            @param colVector
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setSubMatrix(System.Int32,System.Int32,System.Int32,System.Int32,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Set a submatrix.
            
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param col1
                       Initial column index
            @param col2
                       Final column index
            @param X
            @return this(row1:row2,col1:col2)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setSubMatrix(System.Int32,System.Int32,System.Int32[],BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Set a submatrix.
            
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param cols
                       Array of column indices.
            @param B
            @return this(row1:row2,cols(:))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setSubMatrix(System.Int32[],System.Int32,System.Int32,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Set a submatrix.
            
            @param rows
                       Array of row indices.
            @param col1
                       Initial column index
            @param col2
                       Final column index
            @param B
            @return this(rows(:),col1:col2)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.setSubMatrix(System.Int32[],System.Int32[],BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Set a submatrix.
            
            @param rows
                       Array of row indices.
            @param cols
                       Array of column indices.
            @param B
            @return this(rows(:),cols(:))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.solve(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Solve this * X = B
            
            @param B
                       right hand side
            @return solution X if this is square, least squares solution otherwise
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.solveTranspose(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Solve X * this = B, which is also this' * X' = B'
            
            @param B
            @return solution if A is square, least squares solution otherwise.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.squaredSum">
            Squared summation. x = sum(this. ^ 2)
            
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.std(System.String)">
            Calculate Standard Deviation(s) from each col or row
            
            @param roc
            				ROW or COL direction
            @return	std array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.std(System.Int32,System.Int32)">
            Calculate Standard Deviation(s) from matrix
            
            @param row
                       If row == -1 >> all rows
            @param col
                       If col == -1 >> all cols
            @return std value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.stdP(System.String)">
            Calculate Standard Deviation(σ) from each col or ROW
            
            @param roc
            				ROW or COL direction
            @return stdP array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.stdP(System.Int32,System.Int32)">
            Calculate Standard Deviation(σ) from matrix
            
            @param row
                       If row == -1 >> all rows
            @param col
                       If col == -1 >> all cols
            @return stdP value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.substract(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            x = this - B
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.substractEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            this -= B
            
            @param B
            @return this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.sum(System.String)">
            Calculate summation from each col or row
            
            @return sum array
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.sum(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.sumAll">
            Calculate summation from matrix
            
            @return sum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.svd">
            Singular Value Decomposition
            
            @return SVD
            @see SVD
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.ToString(System.Int32,System.Int32)">
            Print the matrix to the output stream. Line the elements up in columns
            with a Fortran-like 'Fw.d' style format.
            
            @param w
                       Column width.
            @param d
                       Number of digits after the decimal.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.ToString(System.Globalization.NumberFormatInfo,System.Int32)">
            Print the matrix to the output stream. Line the elements up in columns.
            Use the format object, and right justify within columns of width
            characters. Note that is the matrix is to be read back in, you probably
            will want to use a NumberFormat that is set to US Locale.
            
            @param format
                       A formatting object to format the matrix elements
            @param width
                       Column width.
            @see java.text.DecimalFormat#setDecimalFormatSymbols
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.trace">
            Matrix trace.
            
            @return trace value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.transpose">
            Matrix transpose.
            
            @return this'
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.transposeMultiply">
            x = this' * this
            
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.transposeMultiply(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            x = this' * B
            
            @param B
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.uminus">
            Unary minus, x = -this
            
            @return x
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.uminusEquals">
            Unary minus, this = -this
            
            @return this
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.var(System.String)">
            Calculate variation(s ^ 2) from each col or row
            
            @param roc
            				ROW or COL direction
            @return variation array
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.var(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.varP(System.String)">
            Calculate variation(σ ^ 2) from each col or row
            
            @param roc
            				ROW or COL direction
            @return varP array
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.varP(System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.get">
            Get a single element.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.get(System.Int32)">
            Get a single element.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getCol(System.Int32)">
            Get a subB.
            
            @param col
                       Column index.
            @return Vector
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.getRow(System.Int32)">
             Get a subB.
             
             @param row
                        Row index.
             @return Vector
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.set(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.Int32)">
            Set a subB.
            
            @param col
                       Column index.
            @return Matrix
            @exception IndexOutOfRangeException
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.set(System.Double[],System.Int32)">
            Get a subB.
            
            @param row
                       Row index.
            @return Matrix
            @exception IndexOutOfRangeException
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.range">
            Matrix range
            
            @return a vector of highest and lowest values in the matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.ranges">
            Matrix range
            
            @return a vector of highest and lowest values in the matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.var">
            var(X) = Xi - Xbar
            
            @return
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.var(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            var(X) = Xi - Xbar
            
            @return
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.cor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Compute the correlation between X and Y
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.diag">
            Return the diagonal matrix of singular values
            
            @return S
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix.collinearity(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Find the largest correlation index
            		 @param corr correlation matrix of parameters.
            		 @return     The indices of two parameters which are most correlated.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR">
            QR Decomposition class.
            
            For an m-by-n matrix A with m >= n, the QR decomposition is an m-by-n
            orthogonal matrix Q and an n-by-n upper triangular matrix R so that A = Q*R.
            
            The QR decompostion always exists, even if the matrix does not have full
            rank, so the constructor will never fail. The primary use of the QR
            decomposition is in the least squares solution of nonsquare systems of
            simultaneous linear equations. This will fail if isFullRank() returns false.
            
            modified at 2006. 6. 1 오후 4:54:05
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR._data">
            Array for internal storage of decomposition.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR._rDiag">
            Array for internal storage of diagonal of R.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR._rows">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR._cols">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.#ctor(System.Double[][])">
            QR Decomposition, computed by Householder reflections.
            
            @param A
            				Rectangular matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Constructor
            
            @param A
            				Rectangular matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.getH">
            Return the Householder vectors
            
            @return Lower trapezoidal matrix whose columns define the reflections
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.getHMatrix">
            Return the Householder vectors
            
            @return Lower trapezoidal matrix whose columns define the reflections
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.getQ">
            Generate and return the (economy-sized) orthogonal factor
            
            @return (economy-sized) orthogonal factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.getQMatrix">
            Generate and return the (economy-sized) orthogonal factor
            
            @return (economy-sized) orthogonal factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.getR">
            Return the upper triangular factor
            
            @return upper triangular factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.getRMatrix">
            Return the upper triangular factor
            
            @return upper triangular factor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.isFullRank">
            Is the matrix full rank?
            
            @return true if R, and hence A, has full rank.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.solve(System.Double[][])">
            Least squares solution of A*X = B
            
            @param B
            				A Matrix with as many rows as A and any number of columns.
            @return X that minimizes the two norm of Q*R*X-B.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.QR.solve(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Least squares solution of A*X = B
            
            @param B
            				A Matrix with as many rows as A and any number of columns.
            @return X that minimizes the two norm of Q*R*X-B.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Constants">
            Constant class
            
            
            
            modified at 2006. 07. 10 오후 6:10:24
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.ErrorFunction">
            ErrorFunction class
            
            
            
            modified at 2006. 07. 18 오전 10:23:40
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.ErrorFunction.errorFunction(System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.ErrorFunction.errorFunctionComplemented(System.Double)" -->
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma">
            Gamma class
            
            
            
            modified at 2006. 07. 10 오후 5:08:22
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.beta(System.Double,System.Double)">
            Returns the beta function of the arguments.
            
            <pre>
                               -     -
                              | (a) | (b)
             beta( a, b )  =  -----------.
                                 -
                                | (a+b)
            </pre>
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.gamma(System.Double)">
            Returns the Gamma function of the argument.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.incompleteBeta(System.Double,System.Double,System.Double)">
            Returns the Incomplete Beta Function evaluated from zero to <tt>xx</tt>;
            formerly named <tt>ibeta</tt>.
            
            @param aa
                       the alpha parameter of the beta distribution.
            @param bb
                       the beta parameter of the beta distribution.
            @param xx
                       the integration end point.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.incompleteBetaFraction1(System.Double,System.Double,System.Double)">
            Continued fraction expansion #1 for incomplete beta integral; formerly
            named <tt>incbcf</tt>.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.incompleteBetaFraction2(System.Double,System.Double,System.Double)">
            Continued fraction expansion #2 for incomplete beta integral; formerly
            named <tt>incbd</tt>.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.incompleteGamma(System.Double,System.Double)">
            Returns the Incomplete Gamma function; formerly named <tt>igamma</tt>.
            
            @param a
                       the parameter of the gamma distribution.
            @param x
                       the integration end point.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.incompleteGammaComplement(System.Double,System.Double)">
            Returns the Complemented Incomplete Gamma function; formerly named
            <tt>igamc</tt>.
            
            @param a
                       the parameter of the gamma distribution.
            @param x
                       the integration start point.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.logGamma(System.Double)">
            Returns the natural logarithm of the gamma function; formerly named
            <tt>lgamma</tt>.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.powerSeries(System.Double,System.Double,System.Double)">
            Power series for incomplete beta integral; formerly named
            <tt>pseries</tt>. Use when b*x is small and x not too close to 1.
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Gamma.stirlingFormula(System.Double)" -->
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Polynomial">
            Polynomial class
            
            
            
            modified at 2006. 07. 10 오후 8:06:40
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Polynomial.p1evl(System.Double,System.Double[],System.Int32)">
            Evaluates the given polynomial of degree <tt>N</tt> at <tt>x</tt>,
            assuming coefficient of N is 1.0. Otherwise same as <tt>polevl()</tt>.
            
            <pre>
                                 2          N
             y  =  C  + C x + C x  +...+ C x
                    0    1     2          N
            
             where C  = 1 and hence is omitted from the array.
                    N
            
             Coefficients are stored in reverse order:
            
             coef[0] = C  , ..., coef[N-1] = C  .
                        N-1                   0
            
             Calling arguments are otherwise the same as polevl().
            </pre>
            
            In the interest of speed, there are no checks for out of bounds
            arithmetic.
            
            @param x
                       argument to the polynomial.
            @param coef
                       the coefficients of the polynomial.
            @param N
                       the degree of the polynomial.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Special.Polynomial.polevl(System.Double,System.Double[],System.Int32)">
            Evaluates the given polynomial of degree <tt>N</tt> at <tt>x</tt>.
            
            <pre>
                                 2          N
             y  =  C  + C x + C x  +...+ C x
                    0    1     2          N
            
             Coefficients are stored in reverse order:
            
             coef[0] = C  , ..., coef[N] = C  .
                        N                   0
            </pre>
            
            In the interest of speed, there are no checks for out of bounds
            arithmetic.
            
            @param x
                       argument to the polynomial.
            @param coef
                       the coefficients of the polynomial.
            @param N
                       the degree of the polynomial.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath">
            StMath class
            
            This class contains methods for performing basic numeric operations. 
            
            modified at 2006. 6. 1 오후 5:33:04
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.abs(System.Double)">
            Returns the absolute value of x
            
            @param x
            				the argument whose absolute value is to be determined
            @return the absolute value of the argument
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.doubleFactorial(System.Int32)">
            Returns the double factorial(n!!) value of x
            
            @param n
                       a value( n >= -1 )
            @return the double factorial value of the argument
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.hypot(System.Double,System.Double)">
            sqrt( a^2 + b^2 ) without under/overflow.
            
            @param a
                       double
            @param b
                       double
            @return sqrt( a^2 + b^2 )
            @throws
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.round(System.Double,System.Double)">
            Rounding function
            
            @param a
            				target value
            @param d
            				digit
            @return rounded value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.singleFactorial(System.Int32)">
            Calculate single factorial(n!)
            
            @param n ( n >= 0 )
            @return n!
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.square(System.Double)">
            returns a^2
            
            @param a
            @return a^2
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.sum(System.Double,System.Double)">
            returns a + b
            
            @param a
            @param b
            @return a + b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.convolve(System.Double[],System.Double[])">
            convolution and polynomial multiplication
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMath.dyadicUpIn(System.Double[],System.Double)">
            Dyadic up function
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix">
            StMatrix class
            
            no data, only static methods
            
            modified at 2006. 6. 1 오후 2:03:00
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.augment(System.Double[][],System.Double[])">
            x = [ a  | b ]
             
             @param a
             @param b
             @return x = [ a  | b ]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.augment(System.Double[][],System.Int32[])">
            x = [ a  | b ]
            
            @param a
            @param b
            @return x = [ a  | b ]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.add(System.Double[][],System.Double[][])">
            x = a + b
            
            @param a
            @param b
            @return x = a + b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.meanSquare(System.Double[],System.Double[])">
             Calculate mean square matrix
             
             result = (x-xbar)(x-xbar)'
             
             @param x
            					x
             @param xbar
            					xbar
             @return 
            					meanSquare 2-dim array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.addEquals(System.Double[][],System.Double[][])">
            a = a + b
            
            @param a
            @param b
            @return a = a + b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.checkMatrix(System.Double[][])">
            Check that all of the rows in the matrix have the same Length.
            
            @param a
            @return void
            @exception ArgumentException
                           This exception is thrown when the lengths of the rows of
                           the input matrix are not uniform.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.checkMatrixDimensions(System.Double[][],System.Double[][])">
            Check matrix demensions with b matrix
            
            @param a
            @param b
            @return void
            @exception ArgumentException
                           This exception is thrown when the lengths of the rows of
                           the input matrix are not uniform.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.checkSquareMatrix(System.Double[][])">
            Check that the matrix is square.
            
            @param a
            @return void
            @exception ArgumentException
                           This exception is thrown when the matrix is not square.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.copyColData(System.Double[][],System.Int32)">
            Make a new array of a column of matrix 
            
            @param a
            @param col
            @return a new array of a column of matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.copyColumnPackedData(System.Double[][])">
            Make a one-dimensional column packed copy of the internal array.
            
            @param a
            @return Matrix elements packed in a one-dimensional array by columns.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.copyMatrix(System.Double[][])">
            Construct a matrix from a shallow copy of a 2-D array.
            
            @param a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.copyRowData(System.Double[][],System.Int32)">
            Make a new array of a row of matrix
            
            @param a
            @param row
            @return a new array of a row of matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.copyRowPackedData(System.Double[][])">
             Make a one-dimensional row packed copy of the internal array.
            
             @param a
             @return Matrix elements packed in a one-dimensional array by rows.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.determinant(System.Double[][])">
            Matrix determinant
            
            Matrix must be square
            
            @param a
            @return determinant
            @see LU#determinant()
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.divide(System.Double[][],System.Double[][])">
            Matrix divide operation, x = a / b
            
            if b is [ 1, 1 ] matrix then perform elementRightDivide.
            else perform multiply( inverse(b) )
            
            @param a
            @param b
            @return double[][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementLeftDivide(System.Double[][],System.Double)">
             Element divide operation. x = a. \ value
            
             @param a
             @param value
             @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementLeftDivide(System.Double[][],System.Double[][])">
             Element-by-element left division, x = a. \ b.
            
             @param a
             @param b
             @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementLeftDivideEquals(System.Double[][],System.Double)">
            Element divide operation. a = a. \ value
            
            @param a
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementLeftDivideEquals(System.Double[][],System.Double[][])">
            Element-by-element left division in place, a = a. \ b.
            
            @param a
            @param b
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementMinus(System.Double[][],System.Double)">
            Element minus operation. x = a. - value
            
            @param a
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementMinusEquals(System.Double[][],System.Double)">
            Element minus operation. a = a. - value
            
            @param a
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementPlus(System.Double[][],System.Double)">
            Element plus operation. x = a. + value
            
            @param a
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementPlusEquals(System.Double[][],System.Double)">
            Element plus operation. a = a. + value
            
            @param a
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementPow(System.Double[][],System.Double)">
            Element power operation. x = a. ^ pow
            
            @param a
            @param pow
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementPowEquals(System.Double[][],System.Double)">
            Element power operation. a = a. ^ pow
            
            @param a
            @param pow
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementRightDivide(System.Double[][],System.Double)">
            Element divide operation. x = a./value
            
            @param a
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementRightDivide(System.Double[][],System.Double[][])">
            Element-by-element right division, x = a. / b.
            
            @param a
            @param b
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementRightDivideEquals(System.Double[][],System.Double)">
            Element divide operation. x = a. / value
            
            @param a
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementRightDivideEquals(System.Double[][],System.Double[][])">
            Element-by-element right division in place, a = a. / b.
            
            @param a
            @param b
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementSqrt(System.Double[][])">
            Element sqrt operation. x = sqrt( a. );
            
            @param a
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementSqrtEquals(System.Double[][])">
            Element sqrt operation. a = sqrt( a. );
            
            @param a
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementSquare(System.Double[][])">
            Element sqrt operation. x = a. ^ 2;
            
            @param a
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementSquareEquals(System.Double[][])">
            Element sqrt operation. a = a. ^ 2;
            
            @param a
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementTimes(System.Double[][],System.Double[][])">
            Element-by-element multiplication, x = a. * b.
            
            @param a
            @param b
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.elementTimesEquals(System.Double[][],System.Double[][])">
            Element-by-element multiplication in place, a = a. * b.
            
            @param a
            @param b
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.Equals(System.Double[][],System.Double[][])">
            Compare with a and b
            
            @param a
            @param b
            @return true if a == b, false otherwise
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getColMatrix(System.Double[][],System.Int32)">
            Get a submatrix.(Column vector)
            
            @param a
            @param col
            @return matrix[ rows x 1 ]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getColVector(System.Double[][],System.Int32)">
            Get a submatrix(Column vector)
            
            @param a
            @param col
            @return vector[ rows x 1 ]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getDiagonalMatrix(System.Double[][])">
            Return the diagonal matrix of diagonal values
            
            @param a
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getDiagonalMatrix(System.Double[])">
            Return the diagonal matrix from vector
            
            @param a
            @return double[]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getRowMatrix(System.Double[][],System.Int32)">
            get a submatrix(row vector)
            
            @param a
            @param row
            @return matrix[1 x col]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getRowVector(System.Double[][],System.Int32)">
            get a submatrix(row vector)
            
            @param a
            @param row
            @return vector[1 x col]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getSubMatrix(System.Double[][],System.Int32,System.Int32,System.Int32,System.Int32)">
            Get a submatrx.
            
            @param a
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param col1
                       Initial column index
            @param col2
                       Final column index
            @return data(row1:row2,col1:col2)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getSubMatrix(System.Double[][],System.Int32,System.Int32,System.Int32[])">
            Get a submatrix.
            
            @param a
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param cols
                       Array of column indices.
            @return data(row1:row2,cols(:))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getSubMatrix(System.Double[][],System.Int32[],System.Int32,System.Int32)">
             Get a submatrix.
            
             @param a
             @param rows
                        Array of row indices.
             @param col1
                        Initial column index
             @param col2
                        Final column index
             @return data(rows(:),col1:col2)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.getSubMatrix(System.Double[][],System.Int32[],System.Int32[])">
            Get a submatrix.
            
            @param a
            @param rows
                       Array of row indices.
            @param cols
                       Array of column indices.
            @return data(rows(:),cols(:))
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.identityMatrix(System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.identityMatrix(System.Int32,System.Int32)">
            Generate identity matrix
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @return An m-by-n matrix with ones on the diagonal and zeros elsewhere.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.inverse(System.Double[][])">
            Matrix inverse or pseudoinverse
            
            @param a
            @return inverse(A) if A is square, pseudoinverse otherwise.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.isSymmetric(System.Double[][])">
            Returns true if a is symmetric matrix, false otherwise
            
            @param a
            @return bool
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiply(System.Double,System.Double[][])">
            Multiply a matrix by a scalar, x = value * a
            
            @param a
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiply(System.Double[],System.Double[][])">
            Return the product of the row array x and the rectangular array a.
            
            @param x
                       a row array ( row vector ) [ 1 x m ]
            @param a
                       a rectangular array [ m x n ]
            @return double[] representing the product of arguments x * a.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiply(System.Double[][],System.Double)">
            Multiply a matrix by a scalar, x = value * a
            
            @param a
            @param value
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiply(System.Double[][],System.Double[])">
            Multiply the rectangular array a and the column array x.
            
            @param a
                       a double rectangular matrix [ m x n ]
            @param x
                       a double column array [ n x 1 ]
            @return double[] representing the product of the arguments, a*x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiply(System.Double[][],System.Double[][])">
            Multiply two rectangular arrays, a * b.
            
            @param a
                       a double rectangular array [ m x n ]
            @param b
                       a double rectangular array [ n x p ]
            @return double[][] product of a times b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiplyEquals(System.Double[][],System.Double)">
            Multiply a matrix by a scalar in place, a *= value
            
            @param a
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiplyTranspose(System.Double[][])">
            x = aa'
            
            @param a
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.multiplyTranspose(System.Double[][],System.Double[][])">
            x = ab'
            
            @param a
            @param b
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.norm1(System.Double[][])">
            Return the matrix one norm(maximum of the column sums).
            
            @param a
            @return double value equal to the maximum of the column sums of the
                    absolute values of the array elements
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.norm2(System.Double[][])">
            Return the matrix two norm(maximum of the singular value)
            
            @param a
            @return double value equal to the maximum of the singular value of the a
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.normFrobenius(System.Double[][])">
            Return the Frobenius norm of a matrix.
            
            @param a
            @return double scalar value equal to the Frobenius norm of the matrix.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.normInfinity(System.Double[][])">
            Return the infinity norm of a matrix(maximum of the row sums).
            
            @param a
            @return double a double scalar value equal to the maximum of the row sums
                    of the absolute values of the array elements
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.print(System.String,System.Double[][])">
            Print Matrix to console
            
            @param title
            @param a
            @return void
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.print(System.String,System.Double[][],System.Int32,System.Int32)">
            Print Matrix to console
            
            @param title
            @param a
            @param w
                       Column width
            @param d
                       Number of digits after the decimal
            @return void
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.randomMatrix(System.Int32,System.Int32)">
            Generate matrix with random elements
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @return An m-by-n matrix with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.randomMatrix(System.Int32,System.Int32,System.Double,System.Double)">
            Generate matrix with random elements
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @param rndMin
            				minimum value of band
            @param rndMax
            				maximum value of band
            @return An m-by-n matrix with uniformly distributed( [ rndMin, rndMax ] ) random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.randomMatrix(System.Int32,System.Int32,System.Int64)">
            Generate matrix with random elements
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @param seed
            				Random seed
            @return An m-by-n matrix with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.randomMatrix(System.Int32,System.Int32,System.Int64,System.Double,System.Double)">
            Generate matrix with random elements
            
            @param rows
                       Number of rows.
            @param cols
                       Number of colums.
            @return An m-by-n matrix with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.rank(System.Double[][])">
            Matrix rank
            
            @param a
            @return effective numerical rank, obtained from SVD.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.removeCol(System.Double[][],System.Int32)">
            Remove Column
            It's too slow operation.
            If you want remove two or more columns then use getSubMatrix method.
            
            @param a
            @param col
            @return double[][]
            @see getSubMatrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.removeRow(System.Double[][],System.Int32)">
            Remove Row
            It's too slow operation.
            If you want remove two or more rows then use getSubMatrix method.
            
            @param a
            @param row
            @return double[][]
            @see getSubMatrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.replaceEPS(System.Double[][])">
            replace EPS to 0
            
            @param x
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setAllValue(System.Double[][],System.Double)">
            Set all elements value of matrix to value
            
            @param a
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setColValue(System.Double[][],System.Int32,System.Double[])">
            Set elements of a column to rowVector.
            
            @param a
            @param rowVector
            @param col
                       Column index.
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setColValue(System.Double[][],System.Int32,System.Double[][])">
            Set elements of a column to rowVector.
            
            @param a
            @param rowVector
                       Matrix [m x 1]
            @param col
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setColValue(System.Double[][],System.Int32,System.String)">
            Set elements of a column to rowVector.
            
            @param a
            @param rowvector
            @param col
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setDiagonalValue(System.Double[][],System.Double)">
            Set diagonal elements value of matrix to value and other elements value
            of matrix to zero
            
            @param a
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setDiagonalValue(System.Double[][],System.Int32,System.Double)">
            Set the element in dialogal index rowCol.
            
            @param a
            @param rowCol
            @param value
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setRowValue(System.Double[][],System.Int32,System.Double[])">
            Set elements of a row to colVector
            
            @param a
            @param row
            @param colVector
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setRowValue(System.Double[][],System.Int32,System.Double[][])">
            Set elements of a row to colVector.
            
            @param a
            @param row
            @param colVector
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setRowValue(System.Double[][],System.Int32,System.String)">
            Set elements of a row to colVector
            
            @param a
            @param row
            @param colVector
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setSubMatrix(System.Double[][],System.Int32,System.Int32,System.Int32,System.Int32,System.Double[][])">
            Set a submatrix.
            
            @param a
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param col1
                       Initial column index
            @param col2
                       Final column index
            @param b
                       data(row1:row2,col1:col2)
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setSubMatrix(System.Double[][],System.Int32,System.Int32,System.Int32[],System.Double[][])">
            Set a submatrix.
            
            @param a
            @param row1
                       Initial row index
            @param row2
                       Final row index
            @param cols
                       Array of column indices.
            @param b
                       data(row1:row2,cols(:))
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setSubMatrix(System.Double[][],System.Int32[],System.Int32,System.Int32,System.Double[][])">
            Set a submatrix.
            
            @param a
            @param rows
                       Array of row indices.
            @param col1
                       Initial column index
            @param col2
                       Final column index
            @param b
                       data(rows(:),col1:col2)
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.setSubMatrix(System.Double[][],System.Int32[],System.Int32[],System.Double[][])">
            Set a submatrix.
            
            @param a
            @param rows
                       Array of row indices.
            @param cols
                       Array of column indices.
            @param b
                       data(rows(:),cols(:))
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.solve(System.Double[][],System.Double[][])">
            Solve a * x = b
            
            @param a
            @param b
            @return solution x if a is square, least squares solution otherwise
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.solveTranspose(System.Double[][],System.Double[][])">
            Solve x * a = b, which is also a' * x' = b'
            
            @param a
            @param b
            @return solution x' if a is square, least squares solution otherwise.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.stringToMatrix(System.String,System.Int32)">
            Convert string to matrix
            
            @param stringData
            @param cols
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.stringToMatrix(System.String,System.Int32,System.String)">
            string to Matrix function( 1 dim to 2 dim )
            
            @param stringData
            @param cols
            @param fillingDirection
            				"ROW" or "COL" direction
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.substract(System.Double[][],System.Double[][])">
            Subtract two rectangular arrays, x = a - b.
            
            @param a
            @param b
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.substractEquals(System.Double[][],System.Double[][])">
            a = a - b
            
            @param a
            @param b
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.ToString(System.Double[][])">
            Print the maitrx to the output stream.
            
            @param a
            @return string
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.ToString(System.Double[][],System.Int32,System.Int32)">
            Print the matrix to the output stream. Line the elements up in columns
            with a Fortran-like 'Fw.d' style format.
            
            @param a
            @param w
                       Column width.
            @param d
                       Number of digits after the decimal.
            @return string
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.ToString(System.Double[][],System.Globalization.NumberFormatInfo,System.Int32)">
            Print the matrix to the output stream. Line the elements up in columns.
            Use the format object, and right justify within columns of width
            characters. Note that is the matrix is to be read back in, you probably
            will want to use a NumberFormat that is set to US Locale.
            
            @param a
            @param format
                       A formatting object to format the matrix elements
            @param width
                       Column width.
            @return string
            @see java.text.DecimalFormat#setDecimalFormatSymbols
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.trace(System.Double[][])">
            Matrix trace.
            
            @param a
            @return sum of the diagonal elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.transpose(System.Double[][])">
            Return the transpose of a matrix. x = a'
            
            @param a
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.transposeMultiply(System.Double[][])">
            x = a'a
            
            @param a
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.transposeMultiply(System.Double[][],System.Double[][])">
            x = a'b
            
            @param a
            @param b
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.uminus(System.Double[][])">
            Unary minus, x = -a
            
            @param a
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.uminusEquals(System.Double[][])">
            Unary minus, a = -a
            
            @param a
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.vectorToMatrixByCol(System.Double[],System.Int32,System.String)">
            Vector to Matrix function( 1 dim to 2 dim )
            
            @param values
            @param cols
            @param fillingDirection
            				"ROW" or "COL" direction
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.vectorToMatrixByRow(System.Double[],System.Int32)">
            Vector to Matrix function( 1 dim to 2 dim )
            
            @param values
            @param rows
            @return matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.vectorToMatrixByRow(System.Double[],System.Int32,System.String)">
            Vector to Matrix function( 1 dim to 2 dim )
            
            @param values
                       a double vector ( 1 dim array )
            @param rows
            @param fillingDirection
            
            @return double[][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newMatrix(System.Int32,System.Int32)">
            new matrix [row * col]
            
            @param row
            @param col
            @return double[][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newMatrixObject(System.Int32,System.Int32)">
            new matrix [row * col]
            
            @param row
            @param col
            @return Double[][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newMatrix(System.Int32,System.Int32,System.Int32)">
            new matrix [row * col * depth]
            @param row
            @param col
            @param depth
            @return double[][][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newMatrixObject(System.Int32,System.Int32,System.Int32)">
            new matrix [row * col * depth]
            @param row
            @param col
            @param depth
            @return Double[][][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newSquareMatrix2(System.Int32)">
            new matrix [rowCol * rowCol]
            @param rowCol
            @return double[][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newSquareMatrixObject2(System.Int32)">
            new matrix [rowCol * rowCol]
            @param rowCol
            @return Double[][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newSquareMatrix3(System.Int32)">
            new matrix [rowCol * rowCol * rowCol]
            @param rowCol
            @return double[][][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.newSquareMatrixObject3(System.Int32)">
            new matrix [rowCol * rowCol * rowCol]
            @param rowCol
            @return Double[][][]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.objectToArrays(System.Double[][])">
            Convert Double[][] to double[][]
            @param x
            @return
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StMatrix.arraysToObject(System.Double[][])">
            Convert double[][] to Double[][]
            @param x
            @return
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector">
            StVector class
            
            This class contains methods for performing vector operations.
            
            modified at 2006. 6. 23 오후 1:56:19
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.add(System.Double[],System.Double[])">
            Returns a + b
            
            @param a
            @param b
            @return a + b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.addEquals(System.Double[],System.Double[])">
            a = a + b
            
            @param a
            @param b
            @return a ( a = a + b )
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.checkVector(System.Double[],System.Double[])" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.copyVector(System.Double[])">
            Returns deep copy of a
            
            @param a
            @return deep copy of a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementLeftDivide(System.Double[],System.Double)">
            Element divide operation. x = a. \ value
            
            @param a
            @param value
            @return x = a.\value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementLeftDivide(System.Double[],System.Double[])">
            Element left division, x = a. \ b.
            
            @param a
            @param b
            @return x = a.\b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementLeftDivideEquals(System.Double[],System.Double)">
            Element divide operation. a = a. \ value
            
            @param a
            @param value
            @return a = a.\value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementLeftDivideEquals(System.Double[],System.Double[])">
            Element left division in place, a = a. \ b.
            
            @param a
            @param b
            @return a = a.\b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementMinus(System.Double[],System.Double)">
            Element minus operation. x = a. - value
            
            @param a
            @param value
            @return x = a. - value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementMinusEquals(System.Double[],System.Double)">
            Element minus operation. a = a. - value
            
            @param a
            @param value
            @return x = a. - value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementPlus(System.Double[],System.Double)">
            Element plus operation. x = a. + value
            
            @param a
            @param value
            @return x = a. + value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementPlusEquals(System.Double[],System.Double)">
            Element plus operation. a = a. + value
            
            @param a
            @param value
            @return a = a. + value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementPow(System.Double[],System.Double)">
            Element power operation. x = a.^pow
            
            @param a
            @param pow
            @return x = a.^pow
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementPowEquals(System.Double[],System.Double)">
            Element power operation. a = a.^pow
            
            @param a
            @param pow
            @return a = a.^pow
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementRightDivide(System.Double[],System.Double)">
            Element divide operation. x = a. / value
            
            @param a
            @param value
            @return x = a. / value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementRightDivide(System.Double[],System.Double[])">
            Element right division, x = a. / b.
            
            @param a
            @param b
            @return x = a. / b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementRightDivideEquals(System.Double[],System.Double)">
            Element divide operation. a = a. / value
            
            @param a
            @param value
            @return a = a. / value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementRightDivideEquals(System.Double[],System.Double[])">
            Element right division in place, a = a. / b.
            
            @param a
            @param a
            @return a = a. / b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementSqrt(System.Double[])">
            Element sqrt operation, x = sqrt( a. )
            
            @param a
            @return x = sqrt( a. )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementSqrtEquals(System.Double[])">
            Element sqrt operation. a = sqrt( a. )
            
            @param a
            @return a = sqrt( a. )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementSquare(System.Double[])">
            Element square operation. x = a.^2
            
            @param a
            @return x = a.^2
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.elementSquareEquals(System.Double[])">
            Element square operation. a = a.^2
            
            @param a
            @return a = a.^2
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.Equals(System.Double[],System.Double[])">
            Compare with other vector.
            
            @param a
            @param b
            @return true if a and b are same. false otherwise.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.euclideanDistance(System.Double[],System.Double[])">
            Calculate Euclidean distance
            Euclidean distance d = sqrt( sum( a. - b.)^2 ) 
            
            @param a
            @param b
            @return value of euclidean distance between a and b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.manhattanDistance(System.Double[],System.Double[])">
            Calculate Manhattan distance
            Manhattan distance d = sum( abs( a. - b. ) )
            
            @param a
            @param b
            @return value of euclidean distance between a and b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.multiply(System.Double[],System.Double)">
            Returns multiply operation
            x = a * value = value * a 
            
            @param a
            @param value
            @return x = a * value = value * a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.multiply(System.Double[],System.Double[])">
            Returns multiply operation
            x = a * b 
            
            @param a
            @param b
            @return x = a * b 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.multiplyColRow(System.Double[],System.Double[])">
            Returns multiply operation ( ColVector * RowVector )
            
            @param a
            @param b
            @return [ a.Length * b.Length ] matrix X = a * b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.multiplyColRow(System.Double[])">
            Returns multiply operation ( ColVector * RowVector )
            
            @param a
            @return [ a.Length * a.Length ] matrix X = a * a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.multiplyEquals(System.Double[],System.Double)">
            Returns multiply operation
            a = a * value = value * a
            
            @param a
            @param value
            @return a = a * value = value * a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.multiplyRowCol(System.Double[],System.Double[])">
            Returns multiply operation ( RowVector * ColVector )
            
            @param a
            @param b
            @return double value x = a * b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.norm(System.Double[],System.Int32)">
            Calculate p-norm of vector a
            
            @param a
            @param p
            @return a = norm( a, p )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.norm1(System.Double[])">
            Return the vector one norm, x = sum( abs( a. ) )
            
            @param a
            @return x = sum( abs( a. ) )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.norm2(System.Double[])">
            Return the vector two norm, x = sqrt( sum( a.^2 ) )
            
            @param a
            @return x = sqrt( sum( a^2 ) )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.normPlusInfinity(System.Double[])">
            Return the +infinity norm, x = max( abs( a ) )
            
            @param a
            @return x = max( abs( a ) )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.normMinusInfinity(System.Double[])">
            Return the -infinity norm, x = min( abs( a ) )
            
            @param a
            @return x = min( abs( a ) )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.print(System.String,System.Double[])">
            Print Vector to console
            
            @param a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.print(System.String,System.Double[],System.Int32,System.Int32)">
            Print vector to console
            
            @param a
            				a double rectangular array
            @param w
            				Column width
            @param d
            				Number of digits after the decimal
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.randomVector(System.Int32)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @return A vector with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.randomVector(System.Int32,System.Double,System.Double)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @param rndMin
            				minimum value of band
            @param rndMax
            				maximum value of band
            @return a vector with uniformly distributed( [ rndMin, rndMax ] ) random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.randomVector(System.Int32,System.Int64)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @param seed
            				random seed
            @return a vector with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.randomVector(System.Int32,System.Int64,System.Double,System.Double)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @param seed
            				random seed
            @param rndMin
            				minimum value of band
            @param rndMax
            				maximum value of band
            @return a vector with uniformly distributed( [ rndMin, rndMax ] ) random elements.
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.replaceEPS(System.Double[])" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.setAllValue(System.Double[],System.Double)">
            a. = value 
            
            @param a
            @param value
            @return changed a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.stringToVector(System.String)">
            string to Vector function
            
            @param stringData
            @return converted vector
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.substract(System.Double[],System.Double[])">
            x = a - b
            
            @param a
            @param b
            @return x = a - b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.substractEquals(System.Double[],System.Double[])">
            a = a - b
            
            @param a
            @param b
            @return a = a - b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.ToString(System.Double[])">
            Print the vector to the output stream.
            
            @param a
            @return string
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.ToString(System.Double[],System.Int32,System.Int32)">
            Print the vector to the output stream.
            
            @param a
            @param w
            				column width
            @param d
            				Number of digits after the decimal
            @return string
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.ToString(System.Double[],System.Globalization.NumberFormatInfo,System.Int32)">
            Print the vector to the output stream. Line the elements up in columns.
            Use the format object, and right justify within columns of width
            characters. Note that is the vector is to be read back in, you probably
            will want to use a NumberFormat that is set to US Locale.
            
            @param a
                       a double rectangular array
            @param format
                       A formatting object to format the vector elements
            @param width
                       Column width.
            @return string
            @see java.text.DecimalFormat#setDecimalFormatSymbols
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.uminus(System.Double[])">
            x = -a
            
            @param a
            @return x = -a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.uminusEquals(System.Double[])">
            a = -a
            
            @param a
            @return a = -a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.maxIndex(System.Double[])">
             find the index of maximum
             
             @param src
            					1-dim array
             
             @return
            					max index
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.minIndex(System.Double[])">
             find the index of minimum
             
             @param src
            					1-dim array
             
             @return
            					min index
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.maxValue(System.Double[],System.Double[])">
             Calculate the maximum value of array of A + B.
             
             @param A
            					array of dateset A.
             @param B
            					array of dateset B.
             
             @return 
            					the maximum value of array of A + B.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.minValue(System.Double[],System.Double[])">
             Calculate the minimum value of array of A + B.
             
             @param A
            					array of dateset A.
             @param B
            					array of dateset B.
             
             @return 
            					the minimum value of array of A + B.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.objectToArray(System.Double[])">
            Convert Double[] to double[]
            @param x
            @return double[]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.arrayToObject(System.Double[])">
            Convert double[] to Double[]
            @param x
            @return Double[]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.StVector.copyVectorReverse(System.Double[])">
            Returns deep copy of reversed a
            
            @param a
            @return deep copy of reversed a
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD">
            Singular Value Decomposition.
            
            For an m-by-n matrix A with m >= n, the singular value decomposition is an
            m-by-n orthogonal matrix U, an n-by-n diagonal matrix S, and an n-by-n
            orthogonal matrix V so that A = U*S*V'.
            
            The singular values, sigma[k] = S[k][k], are ordered so that sigma[0] >=
            sigma[1] >= ... >= sigma[n-1].
            
            The singular value decompostion always exists, so the constructor will never
            fail. The matrix condition number and the effective numerical rank can be
            computed from this decomposition.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD._rows">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD._cols">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD._s">
            Array for internal storage of singular values.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD._U">
            Arrays for internal storage of U and V.
            
            @serial internal storage of U.
            @serial internal storage of S.
            @serial internal storage of V.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD._S">
            Arrays for internal storage of U and V.
            
            @serial internal storage of U.
            @serial internal storage of S.
            @serial internal storage of V.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD._V">
            Arrays for internal storage of U and V.
            
            @serial internal storage of U.
            @serial internal storage of S.
            @serial internal storage of V.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.#ctor(System.Double[][])">
            Construct the singular value decomposition
            
            @param A
            				Rectangular matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Construct the singular value decomposition
            
            @param A
            				Rectangular matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.condition">
            Two norm condition number
            
            @return max(S) / min(S)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getLoadingMatrix">
            return Loading Matrix( V )
            
            @return Loading Matrix( V ) 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getLoadings">
            return Loading Matrix( V )
            
            @return Loading Matrix( V )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getS">
            Return the diagonal matrix of singular values
            
            @return S
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getScoreMatrix(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            returns Score Matrix ( X * V )
            
            @param X
            				input matrix
            @return score matrix( X * V )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getScores(System.Double[][])">
            returns Score Matrix ( x * V )
            
            @param x
            				input matrix
            @return score matrix( x * V )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getSingularValues">
            Return the one-dimensional array of singular values
            
            @return s
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getSingularValueVector">
            Return the one-dimensional array of singular values
            
            @return s
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getSMatrix">
            get Singular matrix
            
            @return S
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getU">
            Return the left singular vectors
            
            @return U
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getUMatrix">
            Return the left singular vectors
            
            @return U
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getV">
            Return the right singular vectors
            
            @return V
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.getVMatrix">
            Return the right singular vectors
            
            @return V
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.norm2">
            return two norm
            
            @return max(S)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SVD.rank">
            Effective numerical matrix rank
            
            @return Number of nonnegligible singular values.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen">
            symEigen class
            
            
            
            modified at 2006. 07. 06 오후 9:03:55
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen._d">
            Arrays for internal storage of eigenvalues.
            
            @serial internal storage of eigenvalues.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen._e">
            Arrays for internal storage of eigenvalues.
            
            @serial internal storage of eigenvalues.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen._dim">
            Row and column dimension (square matrix).
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen._V">
            Array for internal storage of eigenvectors.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.#ctor(System.Double[][])">
            Check for symmetry, then construct the eigenvalue decomposition
            
            @param A
            				Square matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Check for symmetry, then construct the eigenvalue decomposition
            
            @param A
            				Square matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.balance">
            internal balancing function
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.getD">
            Return the block diagonal eigenvalue matrix
            
            @return D
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.getDMatrix">
            Return the block diagonal eigenvalue matrix
            
            @return D
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.getEigenvalues">
            Return the real parts of the eigenvalues
            
            @return real(diag(D))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.getEigenValuesVector">
            Return the real parts of the eigenvalues
            
            @return real(diag(D))
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.getV">
            Return the eigenvector matrix
            
            @return V
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.getVMatrix">
            Return the eigenvector matrix
            
            @return V
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.tql2">
            internal function
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.SymEigen.tred2">
            internal function
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector">
            Vector class
            
            
            
            modified at 2006. 6. 23 오후 1:55:08
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector._data">
            Internal storage data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.checkVector(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Check vector
            
            @param a
            @param b
            @exception ArgumentException
            				when Size(a) != Size(b) 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.euclideanDistance(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Returns euclidean distance between a and b
            
            @param a
            @param b
            @return euclidean distance between a and b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.manhattanDistance(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Returns manhattan distance between a and b
            
            @param a
            @param b
            @return euclidean distance between a and b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.print(System.String,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Print vector to console
            
            @param title
            @param a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.print(System.String,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,System.Int32,System.Int32)">
            Print vectro to console
            
            @param title
            @param a
            @param w
            				column width
            @param d
            				Number of digits after the decimal
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.randomVector(System.Int32)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @return A vector with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.randomVector(System.Int32,System.Double,System.Double)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @param rndMin
            				minimum value of band
            @param rndMax
            				maximum value of band
            @return a vector with uniformly distributed( [ rndMin, rndMax ] ) random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.randomVector(System.Int32,System.Int32)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @param seed
            				random seed
            @return a vector with uniformly distributed random elements.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.randomVector(System.Int32,System.Int32,System.Double,System.Double)">
            Generate vector with random elements
            
            @param Length
            				Size of vector
            @param seed
            				random seed
            @param rndMin
            				minimum value of band
            @param rndMax
            				maximum value of band
            @return a vector with uniformly distributed( [ rndMin, rndMax ] ) random elements.
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.replaceEPS(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.ToString(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Print the vector to the output stream.
            
            @param v
            @return string
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.ToString(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,System.Int32,System.Int32)">
            Print the vector to the output stream.
            
            @param v
            @param w
            				column width
            @param d
            				Number of digits after the decimal
            @return string
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.ToString(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,System.Globalization.NumberFormatInfo,System.Int32)">
            Print the vector to the output stream. Line the elements up in columns.
            Use the format object, and right justify within columns of width
            characters. Note that is the vector is to be read back in, you probably
            will want to use a NumberFormat that is set to US Locale.
            
            @param a
                       a double rectangular array
            @param format
                       A formatting object to format the vector elements
            @param width
                       Column width.
            @return string
            @see java.text.DecimalFormat#setDecimalFormatSymbols
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.#ctor(System.Double[])">
            Constructor
            
            @param a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.#ctor(System.Int32)">
            Constructor
            
            @param Size
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.#ctor(System.Int32,System.Double)">
            Constructor
            
            @param Size
            @param value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.add(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Add operation, x = this + b
            
            @param b
            @return x = this + b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.addEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Add operation, this += b
            
            @param b
            @return this += b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.copyData">
            Deep copy of internal storage of data
            
            @return deep copy of data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.copyVector">
            Deep copy of vector
            
            @return deep copy of vector
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementLeftDivide(System.Double)">
            Element divide operation, x = this. \ value
            
            @param value
            @return x = this. \ value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementLeftDivide(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Element divide operation, x = this. \ b.
            
            @param b
            @return x = this. \ b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementLeftDivideEquals(System.Double)">
            Element divide operation, this = this. \ value
            
            @param value
            @return this = this. \ value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementLeftDivideEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Element divide operation, this = this. \ b.
            
            @param b
            @return this = this. \ b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementMinus(System.Double)">
            Element minus operation, x = this. - value
            
            @param value
            @return x = this. - value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementMinusEquals(System.Double)">
            Element minus operation, this = this. - value
            
            @param value
            @return this = this. - value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementPlus(System.Double)">
            Element plus operation, x = this. + value
            
            @param value
            @return x = this. + value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementPlusEquals(System.Double)">
            Element plus operation, this = this. + value
            
            @param value
            @return this = this. + value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementPow(System.Double)">
            Element pow operation, x = this. ^ pow
            
            @param value
            @return x = this. ^ pow
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementPowEquals(System.Double)">
            Element pow operation, this = this. ^ pow
            
            @param value
            @return this = this. ^ pow
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementRightDivide(System.Double)">
            Element divide operation, x = this. / value
            
            @param value
            @return x = this. / value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementRightDivide(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Element divide operation, x = this. / b.
            
            @param b
            @return x = this. / b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementRightDivideEquals(System.Double)">
            Element divide operation, this = this. / value
            
            @param value
            @return this = this. / value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementRightDivideEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Element divide operation, this = this. / b.
            
            @param b
            @return this = this. / b.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementSqrt">
            Element sqrt operation, x = sqrt( this. )
            
            @return x = sqrt( this. )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementSqrtEquals">
            Element sqrt operation, this = sqrt( this. )
            
            @return this = sqrt( this. )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementSquare">
            Element square operation, x = this. ^ 2
            
            @return x = this. ^ 2
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.elementSquareEquals">
            Element square operation, this = this. ^ 2
            
            @return this = this. ^ 2
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.Equals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Compare with vector b
            
            @param b
            @return true if this == b, false otherwise
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.get(System.Int32)">
            Get element
            
            @param i
            @return this[ i ]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.getData">
            Get internal storage array
            
            @return this.data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.getLength">
            Get Size of vector
            
            @return Size( this )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.multiply(System.Double)">
            Multiply operation, x = this * value
            
            @param value
            @return x = this * value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.multiply(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Multiply operation, x = this * b
            
            @param b
            @return x = this * b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.multiplyColRow(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Multiply operation, x = this(Column vector) * b(Row vector) 
            
            @param b
            @return matrix x = this * b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.multiplyEquals(System.Double)">
            Multiply operation, this *= value
            
            @param value
            @return this *= value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.multiplyRowCol(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Multiply operation, x = this(Row vector) * b(Column vector)
            
            @param b
            @return scalar x = this * b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.norm(System.Int32)">
            Returns p-norm
            
            @param p
            @return p-norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.norm1">
            Returns 1-norm
            
            @return 1-norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.norm2">
            Returns 2-norm
            
            @return 2-norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.normMinusInfinity">
            Returns -infinity norm
            
            @return -infinity norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.normPlusInfinity">
            Returns +infinity norm
            
            @return +infinity norm value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.print(System.String)">
            Print vector to console with title
            
            @param title
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.print(System.String,System.Int32,System.Int32)">
            Print vector to console with title
            
            @param title
            @param w
            				Column width
            @param d
            				Number of digits after the decimal
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.set(System.Int32,System.Double)">
             set element
             
             @param i
            				index
             @param value
            				value to set
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.setAllValue(System.Double)">
            Set all elements to value
            
            @param value
            @return modified this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.stringToVector(System.String)">
            string to Vector
            
            @param str
            @return converted vector
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.substract(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Substract operation, x = this - b
            
            @param b
            @return x = this - b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.substractEquals(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            Substract operation, this -= b
            
            @param b
            @return this -= b
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.ToString(System.Int32,System.Int32)">
            Print vector to output stream.
            
            @param w
            				Column width
            @param d
            				Number of digits after the decimal
            @return string
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.ToString(System.Globalization.NumberFormatInfo,System.Int32)">
            Print vector to output stream
            
            @param format
            				A formatting object to format the elements
            @param width
            				Column width
            @return
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.uminus">
            Unary minus operation, x = -this
            
            @return x = -this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.uminusEquals">
            Unary minus operation, this = -this
            
            @return this = -this
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.Clone">
            The depth of X should be 1
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.lagCor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,System.Int32)">
            The strength of the relationship between two elements in an ordered series, usually a time series, where one element lags a specific number of places behind the other elements. 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector.autoCor(System.Int32)">
            autocorrelation lag
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.CD">
            Summary description for CD.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Kernel.Coiflet">
            Summary description for Coiflet.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Kernel.Daubechies">
            Summary description for 
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Kernel.Haar">
            Summary description for Haar.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Kernel.WaveletKernelUtil">
            Summary description for WaveletKernelUtil.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.MRAData">
            Summary description for DecomposedData.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.MRAData._level">
            Multi-Resolution Level
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.MRAData._cd">
            _cd[ 0 ] = c_level
            _cd[ 1 ] = d_1
            _cd[ 2 ] = d_2
            ...
            _cd[ level ] = d_level
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Wavelet">
            Summary description for Wavelet.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Wavelet.#ctor(System.String,System.Int32,System.Double[])">
            Constructor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Wavelet.dwt(System.Double[],System.Double[],System.Double[])">
            Discrete Wavelet Transform - Decomposition
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Wavelet.decompose(System.Int32)">
            return a_level..d_1..d_level-1......d_level
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Wavelet.reconstruct(System.Boolean,System.Double[])">
            Reconstruction
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Wavelet.Wavelet.idwt(System.Double[],System.Double[],System.Double[],System.Double[])">
            Inverse Discrete Wavelet Transform - Reconstruction
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant">
            Constant class
            
            Statistical Constant class
            
            modified at 2006. 5. 22 오전 10:30:39
            
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.A">
            Chart for Averages / Factors for Control Limits
            
            A
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.A2">
            Chart for Averages / Factors for Control Limits
            
            A2
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.A3">
            Chart for Averages / Factors for Control Limits
            
            A3
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.B3">
            Chart for Standard Deviations / Factors for Control Limits
            
            B3
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.B4">
            Chart for Standard Deviations / Factors for Control Limits
            
            B4
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.B5">
            Chart for Standard Deviations / Factors for Control Limits
            
            B5
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.B6">
            Chart for Standard Deviations / Factors for Control Limits
            
            B6
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.c4">
            Chart for Standard Deviations / Factors for Center Line
            
            c4
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.d2">
            Chart for Ranges / Factors for Center Line
            
            d2
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.d3">
            Chart for Ranges
            
            d3
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.D1">
            Chart for Ranges / Factors for Control Limits
            
            D1
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.D2">
            Chart for Ranges / Factors for Control Limits
            
            D2
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.D3">
            Chart for Ranges / Factors for Control Limits
            
            D3
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.D4">
            Chart for Ranges / Factors for Control Limits
            
            D4
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.#ctor">
            Constructor
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getA(System.Int32)">
            Get constant A
            
            Chart for Averages / Factors for Control Limits
            
            @param sampleSize (
                       sampleSize >= 2 )
            @return double
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getA2(System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getA3(System.Int32)">
            Get constant A3
            
            Chart for Averages / Factors for Control Limits
            
            @param sampleSize (
                       sampleSize >= 2 )
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getB3(System.Int32)">
            Get constant B3
            
            Chart for Standard Deviations / Factors for Control Limits
            
            @param sampleSize (
                       n >= 2 )
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getB4(System.Int32)">
            Get constant B4
            
            Chart for Standard Deviations / Factors for Control Limits
            
            @param sampleSize (
                       n >= 2 )
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getB5(System.Int32)">
            Get constant B5
            
            Chart for Standard Deviations / Factors for Control Limits
            
            @param sampleSize (
                       n >= 2 )
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getB6(System.Int32)">
            Get constant B6
            
            Chart for Standard Deviations / Factors for Control Limits
            
            @param sampleSize (
                       n >= 2 )
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getc4(System.Int32)">
            Get constant c4
            
            Chart for Standard Deviations / Factors for Center Line
            
            @param sampleSize (
                       n >= 2 )
            @return double
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getd2(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getd3(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getD1(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getD2(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getD3(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Constant.getD4(System.Int32)" -->
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.AbstractContinuousDistribution">
            AbstractContinuousDistribution class
            
            
            
            modified at 2006. 07. 14 오후 5:15:42
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.AbstractDistribution">
            AbstractDistribution class
            
            
            
            modified at 2006. 07. 14 오후 5:11:20
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.IDistribution">
            IDistribution class
            
            
            
            modified at 2006. 07. 14 오후 5:06:45
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.IContinuousDistribution">
            IContinuousDistribution class
            
            
            
            modified at 2006. 07. 14 오후 5:08:12
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.AbstractDiscreteDistribution">
            AbstractDiscreteDistribution class
            
            
            
            modified at 2006. 07. 14 오후 5:17:33
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.IDiscreteDistribution">
            IDiscreteDistribution class
            
            
            
            modified at 2006. 07. 14 오후 5:09:08
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.BetaDistribution">
            BetaDistribution class
             A general type of statistical distribution which is related to the gamma distribution. 
             Beta distributions have two free parameters, 
             which are labeled according to one of two notational conventions. 
             The usual definition calls these  and , and the other uses  and  (Beyer 1987, p. 534).
             The beta distribution is used as a prior distribution for binomial proportions 
             in Bayesian analysis (Evans et al. 2000, p. 34). 
            
            modified at 2006. 07. 18 오전 10:35:44
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.BetaDistribution.getAlpha">
            get alpha
            
            
            
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.BetaDistribution.getBeta">
            get beta
            
            
            
            @return double
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.BinomialDistribution">
            BinomialDistribution class * 
             The binomial distribution gives the discrete probability distribution 
             of obtaining exactly successes out of Bernoulli trials 
             (where the result of each Bernoulli trial is true with probability  and false with probability ). 
            
            modified at 2006. 07. 24 오전 9:34:47
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.ChiSquareDistribution">
            ChiSquareDistribution class
             In probability theory and statistics, the chi-square distribution (also chi-squared or χ2  distribution)
             is one of the theoretical probability distributions most widely used in inferential statistics, 
             i.e. in statistical significance tests. 
             It is useful because, under reasonable assumptions, 
             easily calculated quantities can be proven to have distributions 
             that approximate to the chi-square distribution if the null hypothesis is true.
              * 
            modified at 2006. 07. 18 오후 4:06:13
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.Distribution">
            Summary description for Distribution.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.ExponentialDistribution">
            ExponentialDistribution class
            In probability theory and statistics, 
            the exponential distributions are a class of continuous probability distribution. 
            They are often used to model the time between events that happen at a constant average rate.* 
            
            modified at 2006. 07. 18 오후 6:04:43
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.FDistribution">
            FDistribution class
            A continuous statistical distribution which arises in the testing of whether 
            two observed samples have the same variance. 
            Let  and  be independent variates distributed as chi-squared with  and  degrees of freedom.
             
            modified at 2006. 07. 18 오후 4:27:29
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.FDistribution.m">
            The numerator - Degrees of Freedom 
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.FDistribution.n">
            The denominator - Degrees of Freedom 
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.GammaDistribution">
            GammaDistribution class
            
            A gamma distribution is a general type of statistical distribution 
            that is related to the beta distribution and arises naturally in processes 
            for which the waiting times between Poisson distributed events are relevant. 
            Gamma distributions have two free parameters. * 
            
            modified at 2006. 07. 18 오전 11:03:23
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.GammaDistribution.getAlpha">
            get alpha
            
            
            
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.GammaDistribution.getBeta">
            get beta
            
            
            
            @return double
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.LogLogisticDistribution">
            Summary description for LogLogisticDistribution.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.LogLogisticDistribution.getAlpha">
            get alpha
            
            
            
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.LogLogisticDistribution.getBeta">
            get beta
            
            
            
            @return double
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.MultiVariateNormal">
            MultiVariateNormal class
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.NormalDistribution">
            NormalDistribution class
            
            The normal distribution, also called Gaussian distribution,
            is an extremely important probability distribution in many fields. 
            It is a family of distributions of the same general form, 
            differing in their location and scale parameters: 
            the mean ("average") and standard deviation ("variability"), respectively. 
            The standard normal distribution is the normal distribution with a mean of zero 
            and a standard deviation of one (the green curves in the plots to the right). 
            It is often called the bell curve because the graph of its probability density resembles a bell.
            
            modified at 2006. 07. 14 오후 6:36:40
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.PoissonDistribution">
            PoissonDistribution class
            Given a Poisson process, the probability of obtaining exactly  successes in trials
            It is given by the limit of a binomial distribution 
            
            modified at 2006. 07. 19 오전 9:01:19
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.TDistribution">
            TDistribution class
            
            Student's -distribution is defined as the distribution of the random variable  
            which is (very loosely) the "best" that we can do not knowing . 
            
            modified at 2006. 07. 18 오후 6:04:05
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.TDistribution.#ctor(System.Int32)">
            
            @param df degree of freedom
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Distribution.TDistribution.#ctor(System.Double)">
            
            @param df degree of freedom
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA">
            Summary description for FDA.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.n_param">
            The number of parameter
            
            @serial The number of parameter
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.#ctor(System.Int32,System.Int32,System.Double)">
             Constructor
             
             @param n_param 
            					the number of parameter
             @param n_clas 
            					the number of class
             @param n_train 
            					the probability of training set
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.add_class(System.Double[][])">
             After construction, try adding class to memory for the number of n_class
             
             @param in 
            					2-dim array data
             @return 
            					if the number of trials is valid then return true, o/w return false.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.process">
            Modeling Process
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.set_make(System.Int32)">
             Make training and test set by probability of training.
             
             @param seed 
            					the random seed for making each sets.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.cal_ScatterMatrix">
            Make St, Sj, Sw, Sb matrix to the global variables
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.getSt">
             Get St matrix after cal_ScatterMatrix method
             
             @return 
            					2-dim array St matrix 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.getSj">
             Get Sj matrix after cal_ScatterMatrix method
             
             @return 
            					3-dim array Sj matrix  
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.getSw">
             Get Sw matrix after cal_ScatterMatrix method
             
             @return 
            					2-dim array Sw matrix 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.getSb">
             Get Sb matrix after cal_ScatterMatrix method
             
             @return 
            					2-dim array Sb matrix 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.ReductionOrder">
             Reduction order process
             
             @return 
            					reduction order a.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.cal_W">
             calculate eigenvalue and eigenmatrix of FDA vector
             
             @return 
            					real eigenmatrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.metaGj(System.Int32,System.Double[][],System.Double[][])">
             calculate metaGj such that
             
               1
             ----( Wa^t Sj Wa )
             Nj-1
             
             @param Nj 
            					the number of observation in jth class
             @param Wa 
            					the FDA vectors 
             @param Sj 
            					within-class-scatter matrix Sj
             @return 
            					metaGj
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.Gj(System.Double[],System.Double[],System.Double[][],System.Double[][],System.Int32)">
             calculate Gj, when a is smaller than p
             
             @param X
            					X
             @param X_j
            					X_j
             @param Wa
            					Wa
             @param Sj
            					within-class-scatter matrix
             @param Nj
            					Nj
             @return
            					the number of class
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.Zi(System.Double[][],System.Double[])">
             calculate Zi from x for ploting
             
             @param Wa
            					FDA vectors
             @param x
            					1-dim x
             @return 
            					double[x][y]
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.FDA.Zi(System.Double[][],System.Double[][])">
             calculate Zi from set_X for ploting
             
             @param Wa
            					FDA vectors
             @param X
            					2-dim X
             @return 
            					double[x][y]
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2">
            Hotelling T^2 class modified at 2006. 08. 08 오후 10:23:48
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getBetaLimit(System.Int32,System.Int32,System.Double)">
            calculate Limit using Beta distribution
             
            @param samples
            			number of hd data
            @param parameters
            			number of parameter
            @param confidenceLevel
            			confidence level ( 1 - alpha )
            
            @return double
            @throws 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getChiSquareLimit(System.Int32,System.Double)">
            calculate Limit using Chi-Square distribution
             
            @param samples
            			number of hd data
            @param parameters
            			number of parameter
            @param confidenceLevel
            			confidence level ( 1 - alpha )
            
            @return double
            @throws 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getFLimit(System.Int32,System.Int32,System.Double)">
            calculate Limit using F distribution
             
            @param samples
            			number of hd data
            @param parameters
            			number of parameter
            @param confidenceLevel
            			confidence level ( 1 - alpha )
            
            @return double
            @throws 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(System.Double[],System.Double[][],System.Double[])">
            get t2 value
            
            @param Xbar
                       the mean of hds
            @param sigmaInverse
                       inversed covariance Matrix
            @param data
                       data to get T2 value
            
            @return t2 value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            get T2 Value with vector1, vector2, and Sigma Matrix
            
            @param Xbar
                       the mean of hds
            @param sigmaInverse
                       inversed covariance Matrix
            @param data
                       data to get T2 value
            
            @return t2 value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(System.Double[],System.Double[][],System.Double[][])">
            get T2 Value with vector1, vector2, and Sigma Matrix
            
            @param Xbar
                       the mean of hds
            @param sigmaInverse
                       inversed covariance Matrix
            @param data
                       data to get T2 value
            
            @return t2 value array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            get T2 Value with vector1, vector2, and Sigma Matrix
            
            @param Xbar
                       the mean of hds
            @param sigmaInverse
                       inversed covariance Matrix
            @param data
                       data to get T2 value
            
            @return t2 value array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.calculateLimits(System.Double,System.Double,System.Double)">
            Calculate Distribution value
            
            @param controlLimitConfidenceLevel
            @param specLimitConfidenceLevel
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Double[][])">
            construct HotellingT2 with 2-dimensional array
            Training mode
            
            @param hds
                       Historical Data Set Array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Double[][],System.Double,System.Double,System.Double)">
            construct HotellingT2 with 2-dimensional array
            Training mode
            
            @param hds
                       Historical Data Set Array
            @param controlLimitConfidenceLevel
                       control limit Confidence Level
            @param specLimitConfidenceLevel
                       spec limit Confidence Level
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Double[][],System.Double[][],System.Double,System.Double,System.Double)">
            construct HotellingT2 with Array and Covariance Inverse Matrix
            Training mode
            
            @param hds
                       Historical Data Set Array
            @param sigma
                       Covariance Array
            @param controlLimitConfidenceLevel
                       control limit Confidence Level
            @param specLimitConfidenceLevel
                       spec limit Confidence Level
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Double[][],System.Double[][])">
            construct HotellingT2 with Array and Covariance Inverse Matrix
            Training mode
            
            @param hds
                       Historical Data Set Array
            @param sigma
                       Covariance Array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Double[][],System.Double[],System.Double,System.Double,System.Double)">
            construct HotellingT2 with 2-dimensional array
            Training mode
            
            @param hds
                       Historical Data Set Array
            @param xBar
                       xBar
            @param controlLimitConfidenceLevel
                       control limit Confidence Level
            @param specLimitConfidenceLevel
                       spec limit Confidence Level
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Double[][],System.Double[],System.Double[][],System.Double,System.Double,System.Double)">
            construct HotellingT2 with Array and Covariance Matrix
            Training mode
            
            @param hds
                       Historical Data Set Array
            @param sigma
                       Covariance Array
            @param xBar
                       xBar
            @param controlLimitConfidenceLevel
                       control limit Confidence Level
            @param specLimitConfidenceLevel
                       spec limit Confidence Level
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Int32,System.Int32,System.Double[],System.Double[][])">
            Constructor HotellingT2
            Detecting Mode
             
            @param hdCount
            @param paramCount
            @param xBar
            @param sigma
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Int32,System.Int32,System.Double[],System.Double[][],System.Double,System.Double,System.Double)">
            Constructor HotellingT2
            Detecting Mode
             
            @param hdCount
            @param paramCount
            @param xBar
            @param sigma
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            construct HotellingT2 with Matrix
            
            @param hds
                       Historical Data Set Matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            construct HotellingT2 with Array and Covariance Matrix
            
            @param hds
                       Historical Data Set Matrix
            @param sigma
                       Covariance Matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.Double,System.Double,System.Double)">
            construct HotellingT2 with Array and Covariance Matrix
            
            @param hds
                       Historical Data Set Matrix
            @param sigma
                       Covariance Matrix
            @param controlLimitConfidenceLevel
                       control limit Confidence Level
            @param specLimitConfidenceLevel
                       spec limit Confidence Level
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.#ctor(System.Int32,System.Int32,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            Constructor HotellingT2
            Detecting Mode
             
            @param hdCount
            @param paramCount
            @param xBar
            @param sigma
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(System.Double[])">
            get Hotelling T2 values t2 = transpose( x - mean ) * inverse( cov ) * ( x - mean )
            
            @param data
                       array of data
            @return T2 value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(System.Double[][])">
            get T2 value with series of data
            
            @param data
                       2D array of data
            @return T2 value T2 = transpose( x - mean ) * inverse( cov ) * ( x - mean )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
            get t2 value with series of data
            
            @param Xi
                       2D Matrix of data
            @return t2 value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getT2(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Vector)">
            get Hotelling T2 values with vector data
            
            @param Xi
                       vector of data
            @return t2
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getBetaUCL">
            get UCL at alpha level with Beta Distribution ucl = (n - 1) ^ 2 / n * Beta value
            
            @return UCL value with Beta Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getBetaUSL">
            get USL at alpha level with Beta Distribution usl = (n - 1) ^ 2 / n * Beta value
            
            @return USL value with Beta Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getBetaUHL">
            get UHL at alpha level with Beta Distribution uhl = (n - 1) ^ 2 / n * Beta value
            
            @return UHL value with Beta Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getChiSqureUCL">
            get UCL at alpha level with Chi-Square Distribution ucl = Chi square value
            
            @return UCL value with Chi-Square Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getChiSqureUSL">
            get USL at alpha level with Chi-Square Distribution usl = Chi square value
            
            @return USL value with Chi-Square Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getChiSqureUHL">
            get UHL at alpha level with Chi-Square Distribution uhl = Chi square value
            
            @return UHL value with Chi-Square Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getFUCL">
            get UCL at alpha level with F Distribution ucl = p * (n + 1) * (n -1 ) / (
            n * (n - p)) * F - value n is number of rows, p is number of columns
            
            @return UCL value with F Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getFUSL">
            get USL at alpha level with F Distribution usl = p * (n + 1) * (n -1 ) / (
            n * (n - p)) * F - value n is number of rows, p is number of columns
            
            @return USL value with F Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getFUHL">
            get UHL at alpha level with F Distribution uhl = p * (n + 1) * (n -1 ) / (
            n * (n - p)) * F - value n is number of rows, p is number of columns
            
            @return UHL value with F Distribution
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getControlLimitConfidenceLevel">
            get control limit confidence level
            
            @return confidence level value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getSpecLimitConfidenceLevel">
            get spec limit confidence level
            
            @return confidence level value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.getHardLimitConfidenceLevel">
            get hard limit confidence level
            
            @return confidence level value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.setControlLimitConfidenceLevel(System.Double)">
            set control limit confidence level
            
            @param confidenceLevel
            			confidence level value
            @return
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.setSpecLimitConfidenceLevel(System.Double)">
            set spec limit confidence level
            
            @param confidenceLevel
            			confidence level value
            @return
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.HotellingT2.setHardLimitConfidenceLevel(System.Double)">
            set hard limit confidence level
            
            @param confidenceLevel
            			confidence level value
            @return
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.KMeans">
            KMeans clustering
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.KMeans.initialize">
            Initialize center of cluster
            
             
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.KMeans.makeIndex">
            Find cluster number of all point
            
             
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.KMeans.findCenter">
            Find Center of cluster
            
             
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.KMeans.kMeansClustering">
            Main Roof of k-means clustering
            
             
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.KMeans.getCenter">
            Get Center of cluster
            
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.KMeans.getIndex">
            Get cluster number of an object point
            
            
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.LFDA">
            Summary description for LFDA.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA">
            PCA class The PCA Class provides the fundamental operations of Principal
            Components Analysis.Principal components analysis is a quantitatively
            rigorous method for achieving this simplification. The method generates a new
            set of variables, called principal components. Each principal component is a
            linear combination of the original variables. All the principal components
            are orthogonal to each other, so there is no redundant information. The
            principal components as a whole form an orthogonal basis for the space of the
            data. modified at 2006. 7. 27 오전 11:35:47
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.COVARIANCE">
            COVARIANCE or CORRELATION constant
            
            @serial COVARIANCE
            @serial CORRELATION
            @serial RAW
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._modifiedX">
            modifiedX = centerdX or normalizedX.
            
            @serial modifiedX.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._loading">
            coefs is a cols-by-cols matrix, each column containing loadings for
            one principal component
            
            @serial coefs is a P-by-P matrix, each column containing loadings for
                    one principal component
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._COVARIANCEorCORRELATION">
            Selection Variable COVARIANCE or CORRELATION
            
            @serial Selection Variable COVARIANCE or CORRELATION.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._variation">
            The variances of the pc's are the eigenvalues of S.
            
            @serial The variances of the pc's are the eigenvalues of S.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._cumulativeVariation">
            The cumulativevariation is cumulative sum of variances
            
            @serial The cumulativevariation is cumulative sum of variances
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._hds">
            Array for internal storage of elements.
            
            @serial internal array storage.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._rows">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._cols">
            Row and column dimensions.
            
            @serial row dimension.
            @serial column dimension.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._S">
            S of singular value decomposition S = modifiedX'*modifiedX./(n-1)
            
            @serial S of singular value decomposition
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._qStatistics">
            Q = r'r, r = (I - PP')x
            
            @serial Q Matrix
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._residuals">
            r = (I - PP')x
            
            @serial r Matrix
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._sigma">
            sigma = S ./ sqrt(n-1)
            
            @serial sigma = S ./ sqrt(n-1)
            sigma = S ./ sqrt(n-1)
            
            @serial sigma = S ./ sqrt(n-1)
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA._pcCount">
            principal component number
            
            @serial PCnum.
            @serial column dimension.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.calcCumulativeVariation(System.Double[])">
            Calculate cumulative sum of variatian.
            
            @return array of cumulativeVariation
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.countPC(System.Double[],System.Double)">
            Calculate the PC number of following in rule.
            
            @param cumulativeVariation
                       array of cumulativeVariation
            @param percentage
                       percentage for Calculating the PC number ex) 0.85, 0.9
            @return the PC number of following in rule.
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.#ctor(System.Double[][])" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.#ctor(System.Double[][],System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.#ctor(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.calcPCA" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getmodifiedX">
            Get modifiedX modifiedX = X - Xbar
            
            @return array of modifiedX
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getmodifiedXMatrix">
            Get modifiedX modifiedX = X - Xbar
            
            @return matrix of modifiedX
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getLoading">
            Get loadings of PC. loadings are the eigenvector of X.
            
            @return array of loadings of PC.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getLoadingMatrix">
            Get loadings of PC. loadings are the eigenvector of X.
            
            @return matrix of loadings of PC.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getLoadingPC(System.Int32)">
            Get loadings of selected PC.
            
            @param index
                       index of selected PC.
            @return array of loadings of selected PC.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getLoadingPCVector(System.Int32)">
            Get loadings of selected PC.
            
            @param index
                       index of selected PC.
            @return matrix of loadings of selected PC.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getLoadingPC(System.Int32,System.Int32)">
            Get loadings of selected PCs for scatterchart.
            
            @param index1
                       index1 of selected PC.
            @param index2
                       index2 of selected PC.
            @return array of loadings of selected PCs.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getLoadingPCMatrix(System.Int32,System.Int32)">
            Get loadings of selected PCs for scatterchart.
            
            @param index1
                       index1 of selected PC.
            @param index2
                       index2 of selected PC.
            @return matrix of loadings of selected PCs.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getScorePC(System.Int32)">
            Get scores of selected PC.
            
            @param index
                       index of selected PC.
            @return array of score of selected PC.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getScoreAll">
            Get scores of PC. scores = modifiedX * coefs.
            
            @return array of scores of PC.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getScoreAllMatrix">
            Get scores of PC. scores = modifiedX * coefs.
            
            @return matrix of score of PC.
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getVariation">
            Get variation variation is the eigenvalue of X.
            
            @return array of variation
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getVariationVector">
            Get variation variation is the eigenvalue of X.
            
            @return vector of variation
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getCumulativeVariation">
            Get cumulativevariation.
            
            @return array of cumulativeVariation
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getCumulativeVariationVector">
            Get cumulativevariation.
            
            @return matrix of cumulativeVariation
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getPCCount">
            Get principal component number.
            
            @return number of principal component
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getQStatistics(System.Double[][],System.Double[])">
            Get Q statistics
             
            @param coreLoading
                       loading of core PCs.
            @param modifiedX
                       array of preprocessed(centered or normalized) x 
            
            @return Q statistics 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getQStatistics(System.Double[][],System.Double[][])">
            Get Q statistics 
            
            @param coreLoading
                       loading of core PCs.
            @param modifiedX
                       array of preprocessed(centered or normalized) x 
            
            @return array of Q statistics 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getQStatistic(System.Double[][],System.Double[],System.Double[],System.Double[],System.String)">
            Get Q statistics 
            
            @param coreLoading
                       loading of core PCs.
            @param realX
                       array of real x
            @param xBar
                       mean of x
            @param xStd
                       sigma of x
            @param coc
                       COVARIANCE or CORRELATION
            
            @return value of Q statistics 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getQStatistics(System.Double[][],System.Double[][],System.Double[],System.Double[],System.String)">
            Get Q statistics 
            
            @param coreLoading
                       loading of core PCs.
            @param realX
                       array of real x
            @param xBar
                       mean of x
            @param xStd
                       sigma of x
            @param coc
                       COVARIANCE or CORRELATION
            
            @return value of Q statistics 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getQUpperLimit(System.Double[],System.Double,System.Int32)">
            Get UpperLimit of Q statistics
            
            @param pcVariation
                       variation of PCs(All PCs).
            
            @param confidenceLevel
                       level of significance
            
            @param pcCount
                       number of PCs
            
            @return UpperLimit of Q statistics 
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getPRESSSub(System.Double[],System.Double[])">
             calculate PRESS
             @param x
            		The real vector x
             @param xHat
            		The predicted x vector
             @return 
            		PRESS = sum of ((x - xHat) ^ 2 )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getPRESS(System.Double[][],System.Double[][])">
             calculate PRESS
             @param x
            		The real matrix x
             @param xHat
            		The predicted x matrix
             @return 
            		PRESS = (||x - xHat||_F)^2
            		||.||_F is Frobenius norm
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getPRESSWithResidual(System.Double[][],System.Double[])">
             calculate PRESS with Residual
             @param residual
            		The residual matrix (I - pp') [p * p]
             @param modifiedX
            	    modified X vector [p]
             @return 
            		PRESS = (||x - xHat||_F)^2
            		||.||_F is Frobenius norm
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PCA.getPRESSWithResidual(System.Double[][],System.Double[][])">
             calculate PRESS with Residual
             @param residual
            		The residual matrix (I - pp') [p * p]
             @param modifiedX
                  The modified X matrix [n * p]
             @return 
            		PRESS = (||x - xHat||_F)^2
            		||.||_F is Frobenius norm
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS">
            Summary description for PLS.
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.X">
             Parital Least Square Library         
             X
            		The independent variables matrix
             Y
            		The dependent variables matrix
             B_PLS 
            		The coefficient of regression
             eps 
            		The threshold checks vector converge
             OptNFact 
            		The optimal number of latent vectors
             PRESS
            		The Predicted residual sum of squares
             X_col
            		The number of columns in X
             Y_col
            		The number of columns in Y
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.#ctor">
             @param X 
            		The independent variables matrix
             
             @param Y
            		The dependent variables matrix
             
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.getPRESS">
             get the array of Mean Squared Error
             @return 
            		The double[] PRESS
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.getOptN">
             get the optimal number of latent vectors
             @return 
            		The Optimal Number of Latent vactors
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.stRun(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.Int32)">
             Process the PLS algorithms
             @param X
            		The independent variables matrix
             @param Y
            		The dependent variables matrix
             @param nComp
            		The number of latent vectors used in PLS
             @return The Coefficient Matrix B_PLS
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.stRun2(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,System.Int32)">
             Process the PLS algorithms
             @param X
            		The independent variables matrix
             @param Y
            		The dependent variables matrix
             @param nComp
            		The number of latent vectors used in PLS
             @return The Coefficient Matrix B_PLS(included intercept)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.Run(System.Int32)">
             Process the PLS algorithms
             @param nComp
            		The number of latent vectors used in PLS
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.Test(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
             get The predicted Y using B_PLS
             @param X
            		The independent Matrix X
             @return 
            		The predicted Y matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.stTest(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
             get The predicted Y using B_PLS
             @param X
            		The independent Matrix X
             @return 
            		The predicted Y matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.getPRESS(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
             calculate the mean squared error
             @param Y
            		The dependent variables matrix 
             @param Yhat
            		The predicted Y matrix
             @return 
            		PRESS = sum of ((Y - Yhat) ^ 2 )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.MVA.PLS.FindOptN(BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix,BISTel.PeakPerformance.Statistics.Algorithm.Mathematics.Matrix)">
             Find the optimal number of latent vectors in PLS
             The N which have minimum PRESS is optimal number
             @param TestX
            		the independent variables matrix X for Test
             @param TestY
            		the dependent variables matrix Y for Test
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.AdjustedLARs">
            Summary description for LARs.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.ANOVA">
            Summary description for ANOVA.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LARs">
            Summary description for LARs.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression">
            LinearRegression Class
            Hwang Jibin Korea Univ.
            Modified at 2007. 07. 20 pM 20:00:00
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.nRow">
            The number of data
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.nCol">
            The number of input variables
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.aBeta">
            Linear Regression Coefficient
            aBeta[0] ~ aBeta[this.nCol] mean estimated coefficient from input variable x0 to xn
            aBeta[this.nCol] means estimated bias coefficient
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.nRank">
            Rank of input data matrix
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.anova">
            ANOVA of Linear Regression model
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.nSSR">
            Sum of Squred Regression SSR = bTXTY - (1/n)(YTUUTY)
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.nSSE">
            Sum of Squred Error SSE = YTY - bTXTY
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.nMeanY">
            Mean value of Output
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.aL">
            Cholesky decomposited xtx
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.AppendedOne">
            LinearRegression Creator
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.LinearRegression.#ctor(System.Double[][],System.Double[],System.Boolean)">
            A bool type variable which indicates whether or not an aX is appended a column which is m x 1 vector and its all of components are ones.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.MultipleLinearRegression">
            LinearRegression Class
            Hwang Jibin Korea Univ.
            Modified at 2007. 07. 20 pM 20:00:00
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.MultipleLinearRegression.nSize">
            the number of output Matrix's column
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.Regression.StepwiseRegressionFoward">
            Summary description for StepwiseRegressionFowards.
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat">
             StStat class
             
             Daniel Kim modified at 2013-04-03 15:04
             1. StatisticalSummary.getSlope()
            		-. modified expression
             
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.scaleLower">
            scale constants.
            
            @serial scale lower limit
            @serial scale upper limit
            @serial scale difference(range)
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.scaleUpper">
            scale constants.
            
            @serial scale lower limit
            @serial scale upper limit
            @serial scale difference(range)
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.scaleDiff">
            scale constants.
            
            @serial scale lower limit
            @serial scale upper limit
            @serial scale difference(range)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.center(System.Double[][])">
            Center data, x = data. - mean( data )
            
            @param data
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.centerEquals(System.Double[][])">
            Center data, data = data. - mean( data )
            
            @param data
            @return data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.center(System.Double[][],System.Double[])">
            Center data, x = data. - mean( data )
            
            @param data
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.correlation(System.Double[][])">
            Make a correlation matrix
            
            @return x = cor( data )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.covariance(System.Double[][])">
            Make a covariance matrix
            
            @return x = cov( data )
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cp(System.Double,System.Double,System.Double)">
            Cp is for short term. Cp is an index (a simple number) which measures
            how close a process is running to its specification limits, relative to
            the natural variability of the process. The larger the index, the less
            likely it is that any item will be outside the specs. The general rule of
            thumb states that if a Cp value of a process is less than 1.33, then the
            process is incapable of producing a repeatable part. Cp references the
            variation to your specification limits.
            
            @param usl
            @param lsl
            @param std
            @return Cp value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cp(System.Double,System.Double,System.Double[])">
            Cp is for short term. Cp is an index (a simple number) which measures
            how close a process is running to its specification limits, relative to
            the natural variability of the process. The larger the index, the less
            likely it is that any item will be outside the specs. The general rule of
            thumb states that if a Cp value of a process is less than 1.33, then the
            process is incapable of producing a repeatable part. Cp references the
            variation to your specification limits.
            
            @param usl
            @param lsl
            @param data
            @return Cp value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cp(System.Double,System.Double,System.Double[][])">
            Returns Cp
            
            @param usl
            @param lsl
            @param data
            @return Cp value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpk(System.Double,System.Double,System.Double)">
            Returns Cpk value
            
            @param usl
            @param lsl
            @param std
            @return Cpk value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpk(System.Double,System.Double,System.Double[])">
            Cpk is for short term. Cpk is an index (a simple number) which measures
            how close a process is running to its specification limits, relative to
            the natural variability of the process. The larger the index, the less
            likely it is that any item will be outside the specs. The general rule of
            thumb states that if a Cpk value of a process is less than 1.33, then the
            process is incapable of producing a repeatable part. Cpk references the
            variation to your specification limits.
            
            @param usl
            @param lsl
            @param data
            @return Cpk value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpl(System.Double,System.Double,System.Double)">
            Returns Cpl value
            
            @param lsl
            @param mean
            @param std
            @return Cpl value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpl(System.Double,System.Double[])">
            Returns Cpl value
            
            @param lsl
            @param data
            @return Cpl value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpl(System.Double,System.Double[][])">
            Returns Cpl value
            
            @param lsl
            @param data
            @return Cpl value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpu(System.Double,System.Double,System.Double)">
            Returns Cpu value
            
            @param usl
            @param mean
            @param std
            @return Cpu value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpu(System.Double,System.Double[])">
            Returns Cpu value
            
            @param usl
            @param data
            @return Cpu value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Cpu(System.Double,System.Double[][])">
            Returns Cpu value
            
            @param usl
            @param data
            @return Cpu value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.cusum(System.Double,System.Double,System.Double)">
            Returns Cusum statistic
            
            @param currData
            @param prevCusum
            @param targetValue
            @return Cusum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.cusum(System.Double[],System.Double)">
            Calculate Cusum statistics
            
            @param data
            @param targetValue
            @return Cusum array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.deviation(System.Double[][])">
            Make deviation matrix
            
            @return deviation matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.ewma(System.Double,System.Double,System.Double)">
            Returns ewma statistic
            
            @param currData
            @param prevEWMA
            @param lambda
            @return ewma value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.ewma(System.Double[],System.Double)">
            Returns ewma statistics
            
            @param data
            @param lambda
            @return ewma array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.kurtosis(System.Double[])">
            The kurtosis for a standard normal distribution is three. For this
            reason, excess kurtosis is defined as kurtosis = SUM(Xi - Xbar)^4 / ((n -
            1) * std^4) - 3.0 so that the standard normal distribution has a kurtosis
            of zero. Positive kurtosis indicates a "peaked" distribution and negative
            kurtosis indicates a "flat" distribution.
            
            @param data
            @return kurtosis value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.max(System.Double,System.Double)">
            Returns max value
            
            @param currMax
            @param currData
            @return max value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.max(System.Double[])">
            Returns max value
            
            @param data
            @return max value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.max(System.Int32[])">
            Returns max value
            
            @param data
            @return max value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.max(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.max(System.Double[][],System.String)">
            Find max element value from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return max array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mean(System.Double,System.Int32)">
            Returns mean value
            
            @param sum
            @param count
            @return mean value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mean(System.Double[])">
            Returns mean value
            
            @param data
            @return mean value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mean(System.Object[])">
            Returns mean value from object array.
            object array must contain Double objects
            
            @param data
            @return mean value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mean(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mean(System.Double[][],System.String)">
            Calculate mean value from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return mean array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.median(System.Double[])">
            Returns median value
            
            @param data
            @return median value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.absMedian(System.Double[])">
            Returns absolute median value
            
            @param data
            @return absolute median value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.min(System.Double,System.Double)">
            Returns min value
            
            @param currMin
            @param currData
            @return min value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.min(System.Double[])">
            Returns min value
            
            @param data
            @return min value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.min(System.Int32[])">
            Returns min value
            
            @param data
            @return min value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.min(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.min(System.Double[][],System.String)">
            Find min element value from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return min array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.minIndex(System.Double[])">
            Returns min value
            
            @param data
            @return min value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.msd(System.Double[])">
            Returns msd(moving standard deviation) value
            
            @param data
            @return msd value
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.msd(System.Object[])">
            Returns msd(moving standard deviation) value
            
            @param data
            @return msd value
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.msd(System.Double[],System.Int32)">
            Returns msd(moving standard deviation) value
            
            @param data
            @return msd value
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.msd(System.Object[],System.Int32)">
            Returns msd(moving standard deviation) value
            
            @param data
            @return msd value
            
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mse(System.Double[])">
            Returns mse(mean squared error) value
            
            @param data
            @return mse value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mse(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.mse(System.Double[][],System.String)">
            Calculate mse value from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return mse array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalize(System.Double[][])">
            Normalize a, x = ( a. - mean( a ) ) / std( a )
            
            @param a
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalizeEquals(System.Double[][])">
            Normalize a, a = ( a. - mean( a ) ) / std( a )
            
            @param a
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalizeEquals(System.Double[],System.Double[],System.Double[])">
            Normalize a, a = ( a. - mean( a ) ) / std( a )
            
            @param a
            @param mean
            @param std
            @return a
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalize(System.Double[][],System.Double[],System.Double[])">
            Normalize a, x = ( a. - mean( a ) ) / std( a )
            
            @param a
            @param mean
            @param std
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalize(System.Double[][],System.Double[])">
            Normalize a, x = a. / std( a )
            
            @param a
            @param std
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalize(System.Double[],System.Double[],System.Double[])">
            Normalize a, x = ( a. - mean( a ) ) / std( a )
            
            @param a
            @param mean
            @param std
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalize(System.Double[],System.Double[])">
            Normalize a, x = a. / std( a )
            
            @param a
            @param std
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalize(System.Double,System.Double,System.Double)">
            Normalize a, x = ( a. - mean( a ) ) / std( a )
            
            @param a
            @param mean
            @param std
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.deNormalize(System.Double,System.Double,System.Double)">
            Normalize a, x = a / std(a)
            
            @param a
            @param std
            @return x
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.poweredSum(System.Double,System.Double,System.Double)">
            Returns powered summation
            
            @param prevPoweredSum
            @param currData
            @param pow
            @return poweredSum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.poweredSum(System.Double[],System.Double)">
            Returns powered summation
            
            @param data
            @param pow
            @return poweredSum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.poweredSum(System.Double[][],System.Double)">
            Calculate powered summation. s = sum( data. ^ power)
            
            @param data
            @param power
            @return s
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Pp(System.Double,System.Double,System.Double)">
            Pp is for long term. Pp produces an index number (like 1.33) for the
            process variation.
            
            @param usl
            @param lsl
            @param std
            @return Pp value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Pp(System.Double,System.Double,System.Double[])">
            Pp is for long term. Pp produces an index number (like 1.33) for the
            process variation.
            
            @param usl
            @param lsl
            @param data
            @return Pp value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Pp(System.Double,System.Double,System.Double[][])">
            Pp is for long term. Pp produces an index number (like 1.33) for the
            process variation.
            
            @param usl
            @param lsl
            @param data
            @return Pp value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppk(System.Double,System.Double,System.Double)">
            Ppk is for long term. Ppk produces an index number (like 1.33) for the
            process variation.
            
            @param usl
            @param lsl
            @param std
            @return Ppk value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppk(System.Double,System.Double,System.Double,System.Double)">
            Ppk is for long term. Ppk produces an index number (like 1.33) for the
            process variation.
            
            @param usl
            @param lsl
            @param std
            @return Ppk value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppl(System.Double,System.Double,System.Double)">
            Returns Ppl value
            
            @param lsl
            @param mean
            @param std
            @return Ppl value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppl(System.Double,System.Double[])">
            Returns Ppl value
            
            @param lsl
            @param data
            @return Ppl value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppl(System.Double,System.Double[][])">
            Returns Ppl value
            
            @param lsl
            @param data
            @return Ppl value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppu(System.Double,System.Double,System.Double)">
            Returns Ppu value
            
            @param usl
            @param mean
            @param std
            @return Ppu value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppu(System.Double,System.Double[])">
            Returns Ppu value
            
            @param usl
            @param data
            @return Ppu value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Ppu(System.Double,System.Double[][])">
            Returns Ppu value
            
            @param usl
            @param data
            @return Ppu value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.productSum(System.Double[],System.Double[])">
            Calculate product summation. s = sum( a. * b. )
            
            @param a
            @param b
            @return s
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.productSum(System.Double[][],System.Double[][])">
            Calculate product summation. s = sum( a. * b. )
            
            @param a
            @param b
            @return s
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.range(System.Double[])">
            Returns range value
            
            @param data
            @return range value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.range(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.range(System.Double[][],System.String)">
            Returns range value
            
            @param data
            @param roc
            				ROW or COL direction
            @return range array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rangeMinMax(System.Double[])">
            Returns RangeObject
            
            @param data
            @return RangeObject
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rangeMinMax(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rangeMinMax(System.Double[][],System.String)">
            Matrix range
            
            @param data
            @param roc
            				ROW or COL direction
            @return a vector of highest and lowest values in the matrix
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rangeScale(System.Double[][])">
            scaling by maxs, mins
            
            @param data
            @return scaled new data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rangeScale(System.Double[][],System.Double[],System.Double[])">
            scaling by maxs, mins
            
            @param data
            @param dataUpper
            @param dataLower
            
            @return scaled new data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rangeScaleInverse(System.Double[][])">
            descaling by maxs, mins
            
            @param data
            @return descaled new data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rangeScaleInverse(System.Double[][],System.Double[],System.Double[])">
            descaling by maxs, mins
            
            @param dataUpper
            @param dataLower
            @return descaled new data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.skewness(System.Double[])">
            skewness = SUM(Xi - Xbar)^3 / ((n - 1) * std^3) The skewness for a normal
            distribution is zero, and any symmetric data should have a skewness near
            zero. Negative values for the skewness indicate data that are skewed left
            and positive values for the skewness indicate data that are skewed right
            
            @param data
            @return skewness value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.sort(System.Double[])">
            Sort data
            
            @param data
            @return sorted new data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.sort(System.Double[],System.Boolean)">
            Sort data by ascending / descending order
            
            @param data
            @param ascending
            @return sorted new data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.squaredSum(System.Double,System.Double)">
            Returns squared summation
            
            @param prevSquaredSum
            @param currData
            @return squaredsum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.squaredSum(System.Double[])">
            Returns squared summation
            
            @param data
            @return squaredsum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.squaredSum(System.Double[][])">
            Calculate squared summation.
            
            @param data
            @return squaredsum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.std(System.Double,System.Double,System.Int32)">
            Returns std value
            
            @param squaredSum
            @param sum
            @param count
            @return std value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.std(System.Double[])">
            Returns std value
            
            @param data
            @return std value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.std(System.Object[])">
            Returns std value
            
            @param data
            @return std value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.std(System.Double[][],System.Int32,System.Int32)">
            Calculate Standard Deviation(s)
            
            @param row
                       If row == -1 >> all rows
            @param col
                       If col == -1 >> all cols
            @return std value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.std(System.Double[][],System.String)">
            Calculate Standard Deviation(s) from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return	std array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.stdP(System.Double,System.Double,System.Int32)">
            Returns standard deviation(σ)
            
            @param squaredSum
            @param sum
            @param count
            @return stdP value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.stdP(System.Double[])">
            Returns standard deviation(σ)
            
            @param data
            @return stdP value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.stdP(System.Double[][],System.Int32,System.Int32)">
            Calculate Standard Deviation(σ) from matrix
            
            @param data
            @param row
                       If row == -1 >> all rows
            @param col
                       If col == -1 >> all cols
            @return stdP value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.stdP(System.Double[][],System.String)">
            Calculate Standard Deviation(σ) from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return stdP array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.sum(System.Double,System.Double)">
            Returns summation value
            
            @param prevSum
            @param currData
            @return sum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.sum(System.Double[])">
            Returns summation value
            
            @param data
            @return sum value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.sum(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.sum(System.Double[][],System.String)">
            Calculate summation from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return sum array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.sumAll(System.Double[][])">
            Calculate summation
            
            @param data
            @return sum value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.uniformity(System.Double,System.Double)">
            Calculate uniformity
            
            @param std
            @param mean
            @return uniformity value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.uniformity(System.Double[])">
            Calculate uniformity
            
            @param data
            @return uniformity value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.var(System.Double,System.Double,System.Int32)">
            Returns variation( s ^ 2 )
            
            @param squaredSum
            @param sum
            @param count
            @return var value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.var(System.Double[])">
            Returns variation( s ^ 2 )
            
            @param data
            @return var value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.var(System.Object[])">
            Returns variation( s ^ 2 )
            
            @param data
            @return var value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.var(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.var(System.Double[][],System.String)">
            Calculate variation( s ^ 2 ) from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return var array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.varP(System.Double,System.Double,System.Int32)">
            Calculate variation( σ ^ 2 )
            
            @param squaredSum
            @param sum
            @param count
            @return varP value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.varP(System.Double[])">
            Calculate variation( σ ^ 2 )
            
            @param data
            @return varP value
        </member>
        <!-- Badly formed XML comment ignored for member "M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.varP(System.Double[][],System.Int32,System.Int32)" -->
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.varP(System.Double[][],System.String)">
            Calculate variation( σ ^ 2 ) from each col or row
            
            @param data
            @param roc
            				ROW or COL direction
            @return varP array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.wma(System.Double[])">
            Returns wma statistic
            
            @param data
            @return wma value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.wma(System.Double[],System.Double[])">
            Returns wma statistic
            
            @param data
            @param lambda
            @return wma value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.calculateSummary(System.Double[])">
            Returns summary values (min, max, mean, standard deviation, range, sum, ...) of the given data array.
            
            @param	data				Array containing data
            @return	StatisticalSummary	Class containing the summary values and the methods to retrieve them
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.calculateSummary(System.Double[],System.Double[])">
            Returns summary values (min, max, mean, standard deviation, range, sum, ...) of the given data array.
            
            @param	data				Array containing data
            @param	time				Array containing time(sec unit)
            @return	StatisticalSummary	Class containing the summary values and the methods to retrieve them
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.ConverNomialToDouble(System.String,System.String[])">
            Returns converted nominal to double data.
            
            @param	data				containing data
            @param	typeList			Array containing list of type
            @return	converted data		converted double array data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.ConverNomialToDouble(System.String[],System.String[])">
            Returns converted converted nominal to double values  of the given data array.
            
            @param	data				containing data
            @param	typeList			Array containing list of type
            @return	converted data		converted double array data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.ConverDoubleToNominal(System.Double[],System.String[])">
            Returns converted double to nominal data
            
            @param	data				containing data
            @param	typeList			Array containing list of type
            @return	converted data		converted string array data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.ConverDoubleToNominal(System.Double[][],System.String[])">
            Returns converted converted double to nominal values  of the given data array.
            
            @param	data				containing data
            @param	typeList			Array containing list of type
            @return	converted data		converted string array data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.Quantile(System.Double[])">
            Returns quantile double array value ( Q1, Q2, Q3 )
            
            @param	value				Array containing data list 
            @return	Quantile			Quantile double array data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.percentile(System.Double[],System.Double)">
            Returns quantile double value
            
            @param	value				Array containing data list
            @return	percentile			percentile double value
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.normalQQplot(System.Double[])">
            Returns quantile double value
            
            @param	value					Array containing data list
            @return	noraml plotting data array [][0] : axis x, [][1] : axis y
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rootmeansquareerror(System.Double[],System.Double[])">
            Returns quantile double value
            
            @param	y				Array containing target data list
            @param	yhat			Array containing estimated data list
            @return	root mean square error
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.correlationcoefficient(System.Double[],System.Double[])">
            Returns quantile double value
            
            @param	y				Array containing target data list
            @param	yhat			Array containing estimated data list
            @return	correlation coefficient between target and estimated data
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.standardizedResidual(System.Double[],System.Double[],System.Double)">
            Returns stanardizedResidual double array
            
            @param	y				Array containing target data list
            @param	yhat			Array containing estimated data list
            @return	stanardizedResidual value double array
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.rSquare(System.Double[],System.Double[])">
            Returns r Square double value
            
            @param	y				Array containing target data list
            @param	yhat			Array containing estimated data list
            @return	rSquare			r-square double value
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.StatisticalSummary">
            Statistical Summary class
            
        </member>
        <member name="T:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.RangeObject">
            RangeObject class
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.RangeObject.max">
            internal storage
            
            @serial max
            @serial min
        </member>
        <member name="F:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.RangeObject.min">
            internal storage
            
            @serial max
            @serial min
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.RangeObject.getMax">
            get max
            
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.RangeObject.getMin">
            get min
            
            @return double
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.RangeObject.setMax(System.Double)">
            set max
            
            @param max (double)
        </member>
        <member name="M:BISTel.PeakPerformance.Statistics.Algorithm.Stat.StStat.RangeObject.setMin(System.Double)">
            set min
            
            @param min (double)
        </member>
    </members>
</doc>
